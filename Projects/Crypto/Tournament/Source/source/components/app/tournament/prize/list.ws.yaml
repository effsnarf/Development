dom:
  .scroll:
    table:
      tbody:
        tr:
          v-for: i in winnerCount
          td:
            v-text: "(i) + ' place'"
          td:
            v-text: "'$' + getPrize(i - 1)"

props:
  playerCount:
  entryFee:

methods:
  getPrize: | #js
    function(place) {
      return Math.floor(this.prizePool / this.winnerCount);
    }
  quadraticRoots: | #js
    function(a, b, c) {
      const discriminant = b * b - 4 * a * c;
      if (discriminant < 0) {
          return [];
      } else if (discriminant === 0) {
          return [-b / (2 * a)];
      } else {
          const sqrtDiscriminant = Math.sqrt(discriminant);
          return [(-b + sqrtDiscriminant) / (2 * a), (-b - sqrtDiscriminant) / (2 * a)];
      }
    }

computed:
  prizes: | #js
    function() {
      return this.getPrizes(this.playerCount, this.entryFee, this.winnerCount, this.prizePool);
    }
  prizePool: | #js
    function() {
      return (this.playerCount * this.entryFee);
    }
  winnerCount: | #js
    function() {
      return Math.floor(this.playerCount / 3);
    }

style:
  .scroll:
    max-height: 40vh
    overflow: auto
  table:
    width: 100%
  td:
    padding: 0 0.5rem
    border: "1px solid #ffffff40"
  td:nth-child(2):
    text-align: center