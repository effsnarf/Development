dom:
  div: 
    ui.mouse:
      @hovered-element: onHoveredElement
      ':global': true
    ui.context.window:
      ref: context1
      ':global': true
      ':ctrl-right-click': 'false'
      @pinned: onContextPinned
      div: 
        div: 
          ':style': '{ height: ''4em'' }'
          flow.node.title: 
            ':node': activeNode
            full: true
        .flex.gap-2:
          ui.drawer:
            ':open': '!selectedNode'
            ui.list:
              ':items': '[...contextNodes].reverse()'
              value-type: value
              @item-hover: (e) => hoveredNode = e.item
              v-model: selectedNode
              v-slot: slotProps
              flow.node.title: 
                ':class': '''ml-l'' + slotProps.index'
                ':node': slotProps.item
          div: 
            transition:
              flow.node.editor:
                v-if: selectedActiveNode
                ':key': selectedActiveNode.id
                ':node': selectedActiveNode
          div: 
            v-if: activeNode
            h3:
              v-text: '''Related'''
            flow.related.nodes:
              ':node': activeNode
              @item-click: (item) => relatedItem = item
            flow.item.title:
              ':item': relatedItem
              ':full': true
      flow.node.highlight:
        ':node': activeNode
data:
  contextNodes: []
  hoveredNode: null
  selectedNode: null
  relatedItem: null
  isPinned: false
  maxNodes: 5
methods:
  onHoveredElement: | #js
    function(hoveredElement) {
      if (this.$refs.context1.isPinned) return;
      this.contextNodes = this.getNodesFromElement(hoveredElement);
      this.hoveredNode = this.contextNodes[0];
      this.selectedNode = null;
    }
  getNodesFromElement: | #js
    function(element) {
      const nodes = [];
      if (!element) return [];
      let vue = this.$root.vm.getVueFromElement(element);
      while (vue && (nodes.length < this.maxNodes))
      {
        if (vue.node && vue.node.type && !nodes.find(n => (n.id == vue.node.id))) nodes.push(vue.node);
        vue = vue.$parent;
      }
      return nodes;
    }
  onContextPinned: | #js
    function(isPinned) {
      this.isPinned = isPinned;
      if (!isPinned) this.selectedNode = null;
    }
computed:
  activeNode: | #js
    function() {
      return (this.hoveredNode || this.selectedNode || this.contextNodes[0]);
    }
  selectedActiveNode: | #js
    function() {
      if (!this.isPinned) return null;
      return this.selectedNode || this.activeNode;
    }
  console: | #js
    function() {
      return console;
    }
watch: null
style: null
_:
  examples:
    count: 0
name: flow-node-picker
template: >-
  <div class="comp-flow-node-picker" path="198180154."><ui-mouse
  @hovered-element="onHoveredElement" :global="true"
  path="198180154.0"></ui-mouse><ui-context-window ref="context1" :global="true"
  :ctrl-right-click="false" @pinned="onContextPinned" path="198180154.1"><div
  path="198180154.1.0"><div :style="{ height: '4em' }"
  path="198180154.1.0.0"><flow-node-title :node="activeNode" full="true"
  path="198180154.1.0.0.0"></flow-node-title></div><div class="flex gap-2"
  path="198180154.1.0.1"><ui-drawer :open="!selectedNode"
  path="198180154.1.0.1.0"><ui-list :items="[...contextNodes].reverse()"
  value-type="value" @item-hover="(e) =&gt; hoveredNode = e.item"
  v-model="selectedNode" v-slot="slotProps"
  path="198180154.1.0.1.0.0"><flow-node-title :class="'ml-l' + slotProps.index"
  :node="slotProps.item"
  path="198180154.1.0.1.0.0.0"></flow-node-title></ui-list></ui-drawer><div
  path="198180154.1.0.1.1"><transition
  path="198180154.1.0.1.1.0"><flow-node-editor v-if="selectedActiveNode"
  :key="selectedActiveNode.id" :node="selectedActiveNode"
  path="198180154.1.0.1.1.0.0"></flow-node-editor></transition></div><div
  v-if="activeNode" path="198180154.1.0.1.2"><h3 v-text="'Related'"
  path="198180154.1.0.1.2.0"></h3><flow-related-nodes :node="activeNode"
  @item-click="(item) =&gt; relatedItem = item"
  path="198180154.1.0.1.2.1"></flow-related-nodes><flow-item-title
  :item="relatedItem" :full="true"
  path="198180154.1.0.1.2.2"></flow-item-title></div></div></div><flow-node-highlight
  :node="activeNode"
  path="198180154.1.1"></flow-node-highlight></ui-context-window></div>
