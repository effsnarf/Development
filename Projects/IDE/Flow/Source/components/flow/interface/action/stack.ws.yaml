dom:
  div: 
    v-if: actionStack
    div: 
      ui.action.stack:
        ':action-stack': actionStack
        v-slot: slotProps
        template:
          flow.interface.action:
            ':action': slotProps.action
    flow.interface.action.interpreter:
      ref: interpreter1
      ':action-stack': actionStack
props:
  persisters: null
data:
  actionStack: null
mounted: | #js
  async function() {
    await this.init();
  }
methods:
  flow_ui_interpreter_create_box: | #js
    function(box) {
      this.actionStack.do( {
        redo: {
          method: "create.box",
          args: [box]
        }
      });
    }
  executeAction: | #js
    async function(action, options) {
      const redo = action.redo;
      const interpreter = this.$refs.interpreter1;
      action = await interpreter.onAction(action, options);
      return action;
    }
  onUserAction: | #js
    async function(action) {
      await this.actionStack.do(action);
    }
  init: | #js
    async function() {
      this.actionStack = await Actionable.ActionStack.new(
        this.persisters.localStorage,
        "flow.user.actions"
      );

      this.actionStack.executeAction = this.executeAction.bind(this);

      this.$root.$on("user.action", this.onUserAction.bind(this));
    }
computed:
  jsyaml: | #js
    function() {
      return jsyaml;
    }
watch: null
_:
  examples:
    count: 0
name: flow-interface-action-stack
template: >-
  <div class="comp-flow-interface-action-stack" v-if="actionStack"
  path="271844389."><div path="271844389.0"><ui-action-stack
  :action-stack="actionStack" v-slot="slotProps" path="271844389.0.0"><template
  path="271844389.0.0.0"><flow-interface-action :action="slotProps.action"
  path="271844389.0.0.0.0"></flow-interface-action></template></ui-action-stack></div><flow-interface-action-interpreter
  ref="interpreter1" :action-stack="actionStack"
  path="271844389.1"></flow-interface-action-interpreter></div>
