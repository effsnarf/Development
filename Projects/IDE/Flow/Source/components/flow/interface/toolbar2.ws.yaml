dom:
  div:
    .flex.gap-1:
      ui.button:
        v-for: button in buttons
        ':icon': button.icon
        ':text': button.text
        ':click': () => eval(button.click)()
data:
  buttons:
    - icon: ➕🧊
      text: null
      click: >
        () => this.$root.$emit('user.action', this.ua('create.box', { type:
        'variable', data: { map: "obj => obj", value: null }, sockets: { inputs:
        ['data'], outputs: ['data'] } }))
    - icon: ➕𝑓(𝑥)
      text: null
      click: >
        () => this.$root.$emit('user.action', this.ua('create.box', { type:
        'function', data: { name: null, argNames: null, code: null, error: null
        }, sockets: { inputs: ['arg0'], outputs: ['result'] } }))
    - icon: ➕📦
      text: null
      click: >
        () => this.$root.$emit('user.action', this.ua('create.box', { type:
        'vue.comp', data: { comp: { name: "ui.list" } }, sockets: { inputs: [],
        outputs: [] } }))
    - icon: 🗑
      text: clear
      click: | #js
        () => this.$root.$emit('user.action', this.ua('clear'))
methods:
  ua: | #js
    function(method, ...args) {
      return {
        redo: {
          method: method,
          args: [...args]
        }
      };
    }
  eval: | #js
    function(code) {
      return eval(`(${code})`);
    }
style:
  .comp-flow-interface-toolbar2:
    height: min-content
_:
  examples:
    count: 0
name: flow-interface-toolbar2
template: >-
  <div class="comp-flow-interface-toolbar2" path="1077521900."><div class="flex
  gap-1" path="1077521900.0"><ui-button v-for="button in buttons"
  :icon="button.icon" :text="button.text" :click="() =&gt; eval(button.click)()"
  path="1077521900.0.0"></ui-button></div></div>
