dom:
  div: 
    div: 
      .flex:
        div: 
          class: logo
        h2:
          ui.title:
            class: title1
            text: Flow
      .flex1:
        div: 
          flow.gdb.tree:
            ':node': $root.gdb.nodes[0]
            @update:active-node: activeNode = $event
          div: 
            class: spacer1
          div: 
            class: spacer1
        div: 
          v-if: gdb
          ':style': '{ width: ''40em'' }'
          flow.app.node: 
            ':node': appViewRootNode
            ':show-all-pages': true
          flow.app.node: 
            ':node': appViewRootNode
        flow.misc.toolbar: null
        div: 
          flow.node.chain.link:
            ':node': activeNode
          div: 
            class: mt-l2
          flow.node.editor:
            ':key': activeNode?.id
            ':node': activeNode
        flow.misc.trash: null
      div: 
        flow.user.actions: null
        div: 
          class: spacer1
        flow.gdb.list: null
    div: 
      ide.css.stylesheet:
        ':rules': $root.newCssRules
      div: 
        ide.component.style:
          v-for: comp in $root.comps
          ':component': comp
props:
  comps: null
data:
  gdb: null
  activeNode: null
mounted: | #js
  async function() {
    this.gdb = (await (await fetch(`/gdb.yaml`)).json());
  }
methods: null
watch:
  activeNode: | #js
    function(activeNode, oldActiveNode) {
      this.$root.$emit("highlighted-node", activeNode);
    }
computed:
  appViewRootNode: | #js
    function() {
      return this.$root.gdb.getNode("app.view.[0]");
    }
style:
  .spacer1:
    height: 5em
  .logo:
    width: 8em
    aspect-ratio: 3 / 2
    background-image: url(/images/duck.png)
    background-size: contain
  .flex1:
    display: flex
    flex-direction: row
    gap: 1em
  .flex1 > div:nth-child(1):
    width: auto
  .flex1 > div:nth-child(2):
    width: auto
  .comp-ui-title.title1:
    font-size: 200%
name: flow-misc-app
_:
  examples:
    count: 0
template: >-
  <div class="comp-flow-misc-app" path="-1076586785."><div
  path="-1076586785.0"><div class="flex" path="-1076586785.0.0"><div
  class="logo" path="-1076586785.0.0.0"></div><h2
  path="-1076586785.0.0.1"><ui-title class="title1" text="Flow"
  path="-1076586785.0.0.1.0"></ui-title></h2></div><div class="flex1"
  path="-1076586785.0.1"><div path="-1076586785.0.1.0"><flow-gdb-tree
  :node="$root.gdb.nodes[0]" @update:active-node="activeNode = $event"
  path="-1076586785.0.1.0.0"></flow-gdb-tree><div class="spacer1"
  path="-1076586785.0.1.0.1"></div><div class="spacer1"
  path="-1076586785.0.1.0.2"></div></div><div v-if="gdb" :style="{ width: '40em'
  }" path="-1076586785.0.1.1"><flow-app-node :node="appViewRootNode"
  :show-all-pages="true"
  path="-1076586785.0.1.1.0"></flow-app-node><flow-app-node
  :node="appViewRootNode"
  path="-1076586785.0.1.1.1"></flow-app-node></div><flow-misc-toolbar></flow-misc-toolbar><div
  path="-1076586785.0.1.3"><flow-node-chain-link :node="activeNode"
  path="-1076586785.0.1.3.0"></flow-node-chain-link><div class="mt-l2"
  path="-1076586785.0.1.3.1"></div><flow-node-editor :key="activeNode?.id"
  :node="activeNode"
  path="-1076586785.0.1.3.2"></flow-node-editor></div><flow-misc-trash></flow-misc-trash></div><div
  path="-1076586785.0.2"><flow-user-actions></flow-user-actions><div
  class="spacer1"
  path="-1076586785.0.2.1"></div><flow-gdb-list></flow-gdb-list></div></div><div
  path="-1076586785.1"><ide-css-stylesheet :rules="$root.newCssRules"
  path="-1076586785.1.0"></ide-css-stylesheet><div
  path="-1076586785.1.1"><ide-component-style v-for="comp in $root.comps"
  :component="comp"
  path="-1076586785.1.1.0"></ide-component-style></div></div></div>
