dom:
  div: 
    class: layout panel
    ':style': getPanelStyle(node)
    v-if: node
    div: 
      v-for: (child, index) in node.children
      class: layout panel child
      ':style': getChildStyle(child.size)
      flow.type.size:
        v-model: child.size
        v-show-parent-hover: true
        @change: onChildSizeChange(child, index)
        ':orientation': node.orientation
      component:
        ':is': >-
          $root.getGdbCompName($root.gdb.getNode(child.nodeID),
          'flow.layout.panel.empty')
        ':node': $root.gdb.getNode(child.nodeID)
props:
  node: null
computed:
  childNodes: | #js
    function () {
      return this.$root.gdb.getNodes("inside", this.node);
    }
  isHorizontal: | #js
    function () {
      return (this.node.orientation === "horizontal");
    }
  widthOrHeight: | #js
    function () {
      return (this.node.orientation === "horizontal") ? "width" : "height";
    }
  widthOrHeightOpp: | #js
    function () {
      return (this.node.orientation === "horizontal") ? "height" : "width";
    }
methods:
  onChildSizeChange: | #js
    function (child, index) {
      const otherChild = this.node.children[1 - index];
      otherChild.size.value = (100 - child.size.value);
    }
  getPanelStyle: | #js
    function (node) {
      const style = {};
      style["flex-direction"] = this.isHorizontal ? "row" : "column";
      style.width = style.height = "100%";
      return style;
    }
  getChildStyle: | #js
    function (size) {
      const style = {};
      if (["grow", "shrink"].includes(size.option))
      {
        style[`flex-${size.option}`] = 1;
      }
      else
      {
        style[this.widthOrHeight] = (size.option === "percent") ? `${size.value}%` : size.option;
      }
      return style;
    }
style:
  .layout:
    width: 100%
    padding: 0.5em
    background-color: '#ffffff10'
  .panel: null
  .panel:hover > div:
    transition: width 0s, height 0s
  .panel > div:
    width: 100%
name: flow-layout-panel
template: >-
  <div class="comp-flow-layout-panel layout panel" :style="getPanelStyle(node)"
  v-if="node" path="1309568768."><div class="layout panel child" v-for="(child,
  index) in node.children" :style="getChildStyle(child.size)"
  path="1309568768.0"><flow-type-size v-model="child.size"
  v-show-parent-hover="true" @change="onChildSizeChange(child, index)"
  :orientation="node.orientation"
  path="1309568768.0.0"></flow-type-size><component
  :is="$root.getGdbCompName($root.gdb.getNode(child.nodeID),
  'flow.layout.panel.empty')" :node="$root.gdb.getNode(child.nodeID)"
  path="1309568768.0.1"></component></div></div>
