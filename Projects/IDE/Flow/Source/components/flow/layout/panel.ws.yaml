dom:
  div:
    ':class': getCssClass()
    flow.app.node:
      v-for: (childNode, index) in childNodes
      ':style': getChildStyle(index, childNode)
      ':key': childNode.id
      ':node': childNode
props:
  node: null
methods:
  getCssClass: | #js
    function() {
      const cls = {};
      cls[this.node.data.direction.value] = true;
      return cls;
    }
  getChildStyle: | #js
    function(index, childNode) {
      const style = {};
      const direction = this.node.data.direction.value;
      const isHorizontal = direction == 'horizontal';
      const widthOrHeight = isHorizontal ? 'width' : 'height';
      let value = this.node.data.size.value;
      value = (index == 0) ? value : 100 - value;
      style[widthOrHeight] = `${value}%`;
      return style;
    }
computed:
  childNodes: | #js
    function() {
      return this.$root.gdb.getNodes('child.of', this.node);
    }
style:
  .comp-flow-layout-panel:
    display: flex
  .vertical:
    flex-direction: column
  .horizontal:
    flex-direction: row
_:
  examples:
    count: 0
name: flow-layout-panel
template: >-
  <div class="comp-flow-layout-panel" :class="getCssClass()"
  path="1309568768."><flow-app-node v-for="(childNode, index) in childNodes"
  :style="getChildStyle(index, childNode)" :key="childNode.id" :node="childNode"
  path="1309568768.0"></flow-app-node></div>
