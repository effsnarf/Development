dom:
  flow.node.base:
    ':node': node
    @node-datas: onNodeDatas
    transition.group:
      tag: ul
      class: list
      name: list
      li:
        v-for: item in (items || emptyItems)
        ':key': getItemKey(item)
        flow.app.node:
          ':node': templateNode
          ':context-data': item
props:
  node: null
data:
  items: null
  emptyItems:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
  nodeDatas: {}
methods:
  onNodeDatas: | #js
    function(nodeDatas) {
      this.nodeDatas = nodeDatas;
      this.items = this.nodeDatas[this.node.id];
    }
  getItemKey: | #js
    function(item) {
      if (item?.id) return item.id;
      const key = (typeof item === 'number') ? ((item||0) * 1000) : JSON.stringify(item);
      return key;
    }
computed:
  templateNode: | #js
    function() {
      return this.$gdb.getNodes('child.of', this.node)[0];
    }
style:
  .list:
    display: flex
    flex-wrap: wrap
    justify-content: center
  .list > *:
    width: 30%
    opacity: 0.8
  .list > *:hover:
    opacity: 1
  .comp-flow-layout-empty:
    border: 2px dashed white
_:
  examples:
    count: 0
name: flow-layout-list
template: >-
  <flow-node-base class="comp-flow-layout-list" :node="node"
  @node-datas="onNodeDatas" path="1843248162."><transition-group class="list"
  tag="ul" name="list" path="1843248162.0"><li v-for="item in (items ||
  emptyItems)" :key="getItemKey(item)" path="1843248162.0.0"><flow-app-node
  :node="templateNode" :context-data="item"
  path="1843248162.0.0.0"></flow-app-node></li></transition-group></flow-node-base>
