schema:
  nodes:
    flow:
      layout:
  attrs:
    flow:
      type:
        percent:
          editor:
            props:
              value: null
            dom:
              div:
                v-text: "'percent editor'"
              div:
                v-text: "'value:' + value"
        orientation:
          type: enum
          values:
            - vertical
            - horizontal


transpile: | #handlebars
  {{#each schema as |value key|}}
    {{generateType value key 0}}
  {{/each}}
helpers:
  add: | #ts
    (context: any, a: any, b: any) => {
      return a + b;
    };
  eq: | #ts
    (context: any, a: any, b: any, options: any) => {
      return a === b ? options.fn(this) : options.inverse(this);
    };
  generateType: | # handlebars
    {{#if type}}
      {{#eq type "enum"}}
        export enum {{../key}} {
          {{#each values}}
            {{this}}{{#unless @last}},{{/unless}}
          {{/each}}
        }
      {{/eq}}
    {{else}}
      {{#each this as |value key|}}
        {{generateType value key (add @depth 1)}}
      {{/each}}
    {{/if}}
schema:
  attrs:
    flow:
      type:
        orientation:
          type: enum
          values:
            - vertical
            - horizontal


nodes:
  - id: 1
    type: flow.layout.panel
    props:
      orientation: vertical
  - id: 2
    type: flow.input.text
    props:
      hint: search
  - id: 3
    type: list
    props:
      orientation: horizontal
  - id: 4
    type: variable
    props:
      name: query
links:
  - id: 5
    from: 2
    to: 1
    type: inside
