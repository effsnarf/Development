dom:
  grid.module:
    icon: ðŸ§Š
    ':show-title': 'false'
    div:
      ui.linq:
        ':input': inputValue
        @operations: operations = $event
props:
  box: null
data:
  inputValue: null
  outputValue: null
  operations: null
methods:
  grid_client_runtime_socket_value_change: | #js
    function(boxID, socketDirection, sID, socketValue) {
      if (boxID != this.box._id) return;
      this.refresh();
    }
  getSocketValue: | #js
    function(direction) {
      const socketData = this.$root.socket?.runtime.data[this.box._id];
      let data = socketData?.[direction]?.[1];
      return data;
    }
  refresh: | #js
    function() {
      this.inputValue = this.getSocketValue("input");
    }
  init: | #js
    function(box) {
      this.refresh();
    }
  onBoxEvent: | #js
    function(...args) {
      const eventName = `on${args[0].getWords().map(s => s.toTitleCase()).join("")}`;
      args = args.skip(1);
      const method = this[eventName];
      if (!method) throw new Error(`Method not found: ${eventName}`);
      method(...args);
    }
watch:
  operations:
    handler: | #js
      function(operations) {
        this.$emit("box-event", "operations", operations);
      }
  box:
    handler: | #js
      function(box) {
        this.init(box);
      }
    immediate: true
style:
  .value-preview:
    max-width: 20em
    max-height: 20em
    overflow: auto
_:
  examples:
    count: 0
name: grid-ui-box-data-right-side
template: >-
  <grid-module class="comp-grid-ui-box-data-right-side" icon="ðŸ§Š"
  :show-title="false" path="-1961460264."><div path="-1961460264.0"><ui-linq
  :input="inputValue" @operations="operations = $event"
  path="-1961460264.0.0"></ui-linq></div></grid-module>
