dom:
  grid.module:
    icon: ðŸ‘¤ðŸ‘ˆ
    grid.data.list:
      ':fuid': userID+'/user/actions'
    grid.user.action.stack:
      ':userID': userID
props:
  userID: null
data: null
methods:
  grid_ui_actions_create_box: | #js
    async function(userID, rect) {
      const box = {
        type: null,
        rect
      };
      const action = { redo: { method: "create.box", args: [box] } };
      this.$femit("do", userID, action);
    }
  grid_ui_box_move_box: | #js
    async function(boxID, pos) {
      const action = { redo: { method: "move.box", args: [boxID, pos] } };
      this.$femit("do", this.userID, action);
    }
  grid_ui_box_edit_box: | #js
    async function(boxID, data) {
      const action = { redo: { method: "edit.box", args: [boxID, data] } };
      this.$femit("do", this.userID, action);
    }
  grid_ui_actions_undo: | #js
    function(userID) {
      this.$femit("undo", userID);
    }
  grid_ui_actions_redo: | #js
    function(userID) {
      this.$femit("redo", userID);
    }
  grid_ui_actions_clear: | #js
    function(userID) {
      const action = { redo: { method: "clear" } };
      this.$femit("do", userID, action);
    }
_:
  examples:
    count: 0
name: grid-user-actions
template: >-
  <grid-module class="comp-grid-user-actions" icon="ðŸ‘¤ðŸ‘ˆ"
  path="202369922."><grid-data-list :fuid="userID+'/user/actions'"
  path="202369922.0"></grid-data-list><grid-user-action-stack :userID="userID"
  path="202369922.1"></grid-user-action-stack></grid-module>
