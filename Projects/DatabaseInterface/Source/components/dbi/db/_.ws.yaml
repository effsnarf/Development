dom:
  div:
    h2:
      ui.title:
        icon: ðŸ“‚
        :text: dbName
    .flex.justify-between.gap-1:
      ui.drawer:
        dbi.entity.list:
          :dbp: dbp
      .flex.flex-column.gap-2:
        dbi.db.query:
          :dbp: dbp
          :entities: entities
          @new-task: onNewTask
        dbi.ai.tasks:
          :dbp: dbp
          :tasks: tasks
      dbi.current.ops:
        :dbp: dbp

props:
  dbp: null

data:
  entities: null
  tasks: []

mounted: | #js
  async function() {
    this.refresh();
  }

methods:
  onNewTask: | #js
    async function(task) {
      this.tasks.push(task);
    }
  refresh: | #js
    async function() {
      await this.refreshEntities();
    }
  refreshEntities: | #js
    async function() {
      this.entities = (await this.dbp.get.entity.infos());
    }

computed:
  dbName: | #js
    function() {
      return this.dbp.urlBase.split('/').last();
    }
