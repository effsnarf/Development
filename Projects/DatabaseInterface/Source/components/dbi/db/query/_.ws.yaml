dom:
  .flex.gap-2:
    div:
      ui.input.text.box:
        :multiline: "true"
        hint: Talk to your database…
        v-model: prompt
      transition:
        name: slide
        ui.button:
          v-if: canExecute
          text: Send ✔️
          :click: promptToTask
    div:
      v-if: task
      .flex:
        .fs-l1:
          v-text: "'❔'"
        h3:
          v-text: task.title
      .flex.flex-column.gap-2:
        .solution:
          v-for: solution in task.solutions
          .flex:
            .fs-l1:
              v-text: "'📝'"
            div:
              .box1.show-on-hover-container:
                h3:
                  v-text: solution.idea.title
                transition:
                  name: slide
                  div:
                    v-if: solution.editing
                    ui.input.text.box:
                      :multiline: "true"
                      v-model: solution.query
                .show-on-hover:
                  .flex.justify-between:
                    ui.button:
                      text: ✏️ edit
                      :click: () => solution.editing = !solution.editing
                    ui.button:
                      text: execute ▶️
                      :click: () => execute(solution)

props:
  dbp: null

data:
  prompt: null
  query: null
  entities: null
  task: null
  is:
    loading: false

mounted: | #js
  async function() {
    this.entities = (await this.dbp.get.entity.infos());
  }

methods:
  execute: | #js
    async function(solution) {
      this.is.loading = true;
      const result = await this.dbp.execute(solution.query);
      this.is.loading = false;
    }
  promptToTask: | #js
    async function() {
      this.is.loading = true;
      this.task = (await (await fetch(`/api/prompt/to/task`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          entities: this.entities,
          prompt: this.prompt
        })
      })).json());
      this.is.loading = false;
    }

computed:
  canExecute: | #js
    function() {
      return this.entities && this.prompt?.length > 0;
    }

style:
  .box1:
    background: "#ffffff20"
    padding: 0.5em
    cursor: pointer
  .box1:hover:
    background: "#ffffff30"
