dom:
  div:
    div:
      transition:
        name: slide
        h2:
          v-if: ops?.length
          ui.title:
            icon: ⌛
            text: "Current Operations"
      transition.group:
        name: slide
        class: flex flex-column gap-1
        div:
          v-for: op in ops
          :key: op.id
          class: op
          ui.warning:
            :title: op.entity
            :number: op.time.elapsed.unitifyTime()
            .flex:
              pre:
                v-text: op.desc
            .flex.justify-center:
              ui.button:
                text: ❌ stop
                :click: () => dbp.kill.op(op.id)
      ui.value:
        v-if: "false"
        :value: ops
        :visible-fields: "['desc', 'time_slapsed']"

props:
  dbp: null

data:
  ops: null
  is:
    loading: 0

mounted: | #js
  async function() {
    this.refresh();
  }

methods:
  refresh: | #js
    async function() {
      this.is.loading++;
      this.ops = (await this.dbp.get.current.operations(10));
      this.ops = this.ops.map(op => ({
        ...op,
        time_slapsed: op.time.elapsed,
      }));
      this.ops = this.ops.sortByDesc(op => op.time.elapsed);
      this.is.loading--;
      await this.$root.wait(100);
      this.refresh();
    }

style:
  .op .comp-ui-title .number:
    padding: 0 0.5em
    opacity: 1
