dom:
  div:
    ui.ticker:
      :interval: (duration1 * 2)
      :count: 2
      @tick: nextAnimTick
      :enabled: autoPlayLoop
    ui.html.style:
      :component: "{ source: { style: animCssStyleObj } }"
    div:
      :class: listCls
      slot:

props:
  anim:
  duration:
  itemsCount:
  autoPlayLoop: true

data:
  listCls: []

methods:
  init: | #js
    function() {
      this.nextAnimTick(null);
    }
  nextAnimTick: | #js
    async function(index) {
      const anim = this.anim;
      if (!anim) return;

      this.listCls.clear();
      this.listCls.push("list-anim");
      this.listCls.push(`list-anim-${anim.name}`);
      this.listCls.push(`list-items-${this.itemsCount}`);

      if (index == 0) {
        this.listCls.push("anim-leaving");
      }
      if (index == 1) {
        this.listCls.push("anim-entering");
        await this.$nextTick();
        await (0.1).seconds().wait();
        this.listCls.remove("anim-entering");
      }
    }
  getAnimCssStyleObj: | #js
    function(anim) {
      if (!anim) return null;
      const s = {};

      s[`.list-anim-${anim.name} > .list-item`] = { transition: `${this.duration1}ms` };
      s[`.page-entering .list-anim-${anim.name} > .list-item`] = anim.enter.from;
      s[`.page-leaving .list-anim-${anim.name} > .list-item`] = anim.leave.to;
      s[`.list-anim-${anim.name}.anim-entering > .list-item`] = anim.enter.from;
      s[`.list-anim-${anim.name}.anim-leaving > .list-item`] = anim.leave.to;

      const td = [];
      const stagger = (this.duration1 / this.itemsCount);
      // staggers array has [0, stagger, stagger*2, stagger*3, ...]
      const staggers = Array(this.itemsCount).fill(0).map((_, i) => i * stagger).shuffle();
      for (let i = 0; i < this.itemsCount; i++) {
        td.push({
          sel: `.list-items-${this.itemsCount} > .list-item:nth-child(${i+1})`,
          val: { 'transition-delay': `${staggers.pop()}ms` }}
        );
      }
      for (const t of td) s[t.sel] = t.val;

      return s;
    }

computed:
  animCssStyleObj: | #js
    function() {
      return this.getAnimCssStyleObj(this.anim);
    }
  duration1: | #js
    function() {
      return (this.duration || 1000);
    }

watch:
  anim:
    immediate: true
    deep: false
    handler: | #js
      function(newAnim) {
        this.init();
      }