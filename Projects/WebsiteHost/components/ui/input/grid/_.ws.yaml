dom:
  .flex1:
    .option.clickable:
      v-for: grid in grids
      :class: "{ selected: (Objects.areEqual(grid, value)) }"
      @mouseenter: onPreview(grid)
      @mouseleave: onPreview(null)
      @click: onSelect(grid)
      ui.dom.grid:
        :grid: grid
        :show-example: "true"
        :show-grid-name: showGridName
        :show-opacity-overlay: showOpacityOverlay

props:
  grids:
  showGridName:
  showOpacityOverlay:
  value:
  
data:

methods:
  onPreview: | #js
    function(grid) {
      this.$emit("preview", grid);
    }
  onSelect: | #js
    function(grid) {
      this.$emit("input", grid);
    }

computed:
  Objects: | #js
    function() {
      return window.Objects;
    }

style:
  .flex1:
    display: flex
    flex-direction: row
    flex-wrap: wrap
    justify-content: center
    align-items: center
    gap: 0em
  .option:
    flex: 0 1 33.33%
    padding: 0.7em
