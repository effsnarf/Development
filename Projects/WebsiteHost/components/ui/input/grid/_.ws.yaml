dom:
  .flex1:
    .option.clickable:
      v-for: grid in grids
      :class: "{ selected: (grid == value) }"
      @mouseenter: onPreview(grid)
      @mouseleave: onPreview(null)
      @click: onSelect(grid)
      ui.dom.grid:
        :grid: grid
        :show-example: "true"

props:
  value:
  
data:
  grids:
    - name: left box, wide rectangles
      template:
        columns: "2fr 3fr"
        rows: "1fr 1fr"
        areas:
          - [1, 1, 3, 2]
          - [1, 2, 2, 3]
          - [2, 2, 3, 3]
      example:
        boxes: 3
        aspect:
          ratio: 3 / 1
    - name: header, content
      template:
        columns: "1fr"
        rows: "30% 70%"
        named:
          areas:
            - ["header"]
            - ["content"]
    - name: column, content
      template:
        columns: "1fr 3fr"
        rows: "1fr"
        named:
          areas:
            - ["column", "content"]
    - name: header, content, footer
      template:
        columns: "1fr"
        rows: "20% 1fr 20%"
        named:
          areas:
            - ["header"]
            - ["content"]
            - ["footer"]

methods:
  onPreview: | #js
    function(grid) {
      this.$emit("preview", grid);
    }
  onSelect: | #js
    function(grid) {
      this.$emit("input", grid);
    }

style:
  .flex1:
    display: flex
    flex-direction: row
    flex-wrap: wrap
    justify-content: center
    gap: 2em
  .option:
    width: 7em
