dom:
  div:
    .flex:
      ui.select:
        :options: cssPropOptions
        input-type: value
        v-model: selectedOption
      div:
        v-if: (selectedOption?.endsWith('[unit]'))
        ui.input.css.unit:
          :value: value
          @input: $emit('input', $event)

props:
  cssProperty:
  value: null
data:
  selectedOption:
methods:
computed:
  cssPropOptions: | #js
    function() {
      const cssProperty = this.cssProperty;
      switch (cssProperty) {
        case "width": return ["⚙️ auto", "🧩 fit-content", "➕ max-content", "➖ min-content", "📏 [unit]"];
        case "height": return ["⚙️ auto", "🧩 fit-content", "➕ max-content", "➖ min-content", "📏 [unit]"];
      }
      throw new Error(`Unsupported cssProperty: ${cssProperty}`);
    }
watch:
  selectedOption: | #js
    function(option) {
      if (!option.endsWith('[unit]')) this.$emit('input', option.split(' ').last());
    }
_:
  examples:
    count: 0
name: ui-input-css-value
template: >-
  <div class="comp-ui-input-css-value" path="-1335464632."><div class="flex"
  path="-1335464632.0"><ui-input-range max="100" step="1" v-model="number"
  path="-1335464632.0.0"></ui-input-range></div></div>
