dom:
  div:
    h2:
      ui.title:
        icon: ðŸ§±
        text: layout
    .flex:
      ui.tabs:
        :options: tabOptionNames
        direction: vertical
        :can-select-none: "true"
        :drawer: "false"
        v-model: selectedTabIndex
      div:
        v-for: (tabOption, i) in tabOptions
        transition:
          name: slide-hor-ver
          div:
            v-if: (selectedTabIndex == i)
            component:
              :is: "('ui.input.layout.'+tabOption).replaceAll('.', '-')"
              :direction: layout.direction
              :value: getComponentValue(tabOption)
              @input: (value) => onComponentInput(tabOption, value)
props:
  value: null
data:
  layout:
  tabOptions:
  selectedTabIndex:
  layoutPropNames: ["direction", "order", "justify.content", "align.items", "size"]
methods:
  onComponentInput: | #js
    function(tabOption, value) {
      Objects.setProperty(this.layout, tabOption, value);
    }
  getComponentValue: | #js
    function(tabOption) {
      return Objects.getProperty(this.layout, tabOption);
    }
  getTabOptions: | #js
    function(layout) {
      const options = [];
      for (const key of this.layoutPropNames) {
        if (Objects.pathExists(layout, key)) options.push(key);
      }
      return options;
    }
computed:
  tabOptionNames: | #js
    function() {
      return this.tabOptions
        .map(t => t.replaceAll('.', '-'))
        .map(t => `ðŸ§± ${t}`);
    }
  Objects: | #js
    function() {
      return window.Objects;
    }
watch:
  layout:
    handler: | #js
      function(layout) {
        if (Objects.areEqual(layout, this.value)) return;
        this.$emit('input', layout);
      }
    deep: true
  value:
    handler: | #js
      function(layout) {
        this.layout = layout;
        this.tabOptions = this.getTabOptions(layout);
      }
    immediate: true
    deep: true
_:
  examples:
    count: 0
name: ui-input-layout
template: >-
  <div class="comp-ui-input-layout" path="-1483325720."><h2
  path="-1483325720.0"><ui-title icon="ðŸ§©" text="layout"
  path="-1483325720.0.0"></ui-title></h2><ui-tabs :options="['ðŸ§© direction', 'ðŸ‘‰
  order', 'ðŸŽ« item size', 'ðŸŽ« justify']" direction="vertical"
  :can-select-none="true" path="-1483325720.1"><template v-slot="tab0"
  path="-1483325720.1.0"><ui-input-layout-direction v-model="direction"
  path="-1483325720.1.0.0"></ui-input-layout-direction></template><template
  v-slot="tab1" path="-1483325720.1.1"><ui-input-layout-order
  :direction="direction" v-model="order"
  path="-1483325720.1.1.0"></ui-input-layout-order></template><template
  v-slot="tab2" path="-1483325720.1.2"><ui-input-layout-item-size
  v-model="item.size"
  path="-1483325720.1.2.0"></ui-input-layout-item-size></template><template
  v-slot="tab3" path="-1483325720.1.3"><ui-input-layout-justify
  v-model="item.justify"
  path="-1483325720.1.3.0"></ui-input-layout-justify></template></ui-tabs></div>
