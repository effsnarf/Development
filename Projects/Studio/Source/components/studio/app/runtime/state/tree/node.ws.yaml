dom:
  div:
    .flex1:
      span:
        v-text: "'ðŸ§Š'"
      span:
        v-text: item.name
      div:
        v-if: item.value
        .preview:
          ui.value.preview:
            :value: item.value
            :show-visible-fields-filter: "false"

props:
  item:
  userAppState:

data:
  key1:

mounted: | #js
  function() {
    this.$root.$on("app.state.changed", this.onAppStateChanged.bind(this));
  }

methods:
  refresh: | #js
    function() {
    }
  onAppStateChanged: | #js
    function(vars) {
      const var1 = vars.find(v => Objects.areEqual(this.item.path, v.varPath));
      if (var1) this.item.value = var1.newValue;
    }

style:
  .flex1:
    display: flex
    gap: 0.5em
  .preview:
    display: flex
    align-items: baseline
    margin: -0.1em
    max-width: 15em
    max-height: 3.5em
    overflow: hidden
    transition: 1s
  .preview:hover:
    max-width: 20em
    max-height: 20em
    overflow: auto
    