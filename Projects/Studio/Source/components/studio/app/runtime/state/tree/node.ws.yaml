dom:
  .state-item:
    ui.dnd.draggable:
      :drag-item: "{ type: 'app.state.path', item: item.path }"
      .flex1:
        :class: "{ highlighted: isHighlighted }"
        @mouseenter: () => { isHighlighted = false; }
        span:
          v-text: "'ðŸ§Š'"
        span:
          v-text: item.name
        .preview:
          ui.value.preview:
            :value: item.value
    .value-props:
      v-if: (Objects.is(item.value, Object))
      ui.dnd.draggable:
        v-for: (key, i) in Object.keys(item.value||{})
        :drag-item: "{ type: 'app.state.path', item: [...item.path, key] }"
        .flex1:
          .grayscale:
            v-text: "'ðŸ§Š'"
          span:
            v-text: key
          .preview:
            ui.value.preview:
              :value: item.value[key]

props:
  item:
  userAppState:

data:
  isHighlighted: 0
  highlightDuration: 3000
  highlightTimer: null
  key1:

mounted: | #js
  function() {
    this.$root.$on("app.state.changed", this.onAppStateChanged.bind(this));
  }

methods:
  refresh: | #js
    function() {
    }
  onAppStateChanged: | #js
    function(vars) {
      const var1 = vars.find(v => Objects.areEqual(this.item.path, v.varPath));
      if (var1) {
        this.item.value = var1.newValue;
        this.flashHighlight();
      }
    }
  flashHighlight: | #js
    function(value = true) {
      this.isHighlighted = value;
      clearTimeout(this.highlightTimer);
      if (!value) return;
      this.highlightTimer = setTimeout(() => { this.flashHighlight(false) }, this.highlightDuration);
    }

computed:
  Objects: | #js
    function() {
      return window.Objects;
    }

style:
  .value-props, .preview:
    transition: 2s
  .value-props:
    margin-left: 1em
    max-height: 0em
    opacity: 0
  .state-item:hover > * > * > .preview:
    max-height: 0em
    overflow: hidden
    opacity: 0
  .state-item:hover .value-props:
    max-height: 20em
    opacity: 1
    overflow: auto
  .value-props >:
    filter: grayscale
  .highlighted:
    font-size: 110%
    padding: 0 0.5em
    border: 2px dashed yellow !important
    background: "#22448880"
  .flex1:
    display: flex
    gap: 0.5em
    transition: 0.4s !important
  .preview:
    display: flex
    align-items: baseline
    margin: -0.1em
    max-width: 15em
    max-height: 3.5em
    overflow: hidden
    