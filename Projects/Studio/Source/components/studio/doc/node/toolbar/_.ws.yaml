dom:
  div:
    :key: key1
    .tools:
      div:
        v-for: ntt in nodeTypeTools
        :key: ntt.type
        @mouseenter: hovered.ntt = ntt
        @mouseleave: hovered.ntt = null
        ui.dnd.draggable:
          :drag-item: "{ type: (ntt.dragType??'new.node'), item: ntt }"
          .tool.tool-dimmed:
            .icon:
              v-text: ntt._?.icon
            .title:
              v-text: ntt.type
      transition.group:
        name: slide-hor
        studio.doc.node.toolbar.comp:
          v-for: compNode in compNodes
          :comp-node: compNode
          :key: compNode.id
      div:
        ui.context.window:
          .box2:
            .flex:
              h2:
                v-text: "'➕📦'"
              div:
                div:
                  v-text: "'Drop a branch from the app tree here to create a new reusable component.'"
        ui.dnd.dropzone:
          :accepts: "['node']"
          @drop-item: onDropItem_new_comp
          template:
            v-slot: tooltip
            div:
              v-text: "'➕ create a 📦 new component'"
          .tool.tool-dimmed.new-comp:
            .icon:
              v-text: "'➕📦'"
            .title:
              v-text: "'[new comp]'"
    div:
      v-if: "false"
      :visible: "['page', 'panel', 'list'].includes(hovered.ntt?.type)"
      .box2:
        video:
          v-if: "false"
          :style: "{ width: '20em' }"
          ref: video1
          source:
            src: "https://i.imgur.com/y55qHHt.mp4"
            type: "video/mp4"
        div:
          .flex:
            v-if: ('page' == hovered.ntt?.type)
            h2:
              v-text: "'📜'"
            div:
              div:
                v-text: "'👆 Click to edit settings for all pages.'"
              div:
                v-text: "'🖐️ Drag to create a new page.'"
          .flex:
            v-if: ('panel' == hovered.ntt?.type)
            h2:
              v-text: "'📂'"
            div:
              div:
                v-text: "'A panel is a general container for other elements, in a grid or flex layout.'"
          .flex:
            v-if: ('list' == hovered.ntt?.type)
            h2:
              v-text: "'🧮'"
            div:
              div:
                v-text: "'A list binds array data to other elements (like a for loop), in a grid or flex layout.'"

data:
  nodeTypeTools:
    - type: page
      dragType: new.page
    - type: panel
    - type: list
    - type: image
    - type: text
    - type: textbox
    - type: button
  compNodes: []
  hovered:
    ntt: null
  key1: 1

mounted: | #js
  function() {
    this.init();
  }

methods:
  init: | #js
    async function() {
      if (!this.$root._studio_methods_initialized) return setTimeout(this.init.bind(this), 100);
      this.$root.e.on("app.node.changed", this.refresh.bind(this));
      this.$root.e.on("new.comp.created", this.refresh.bind(this));
      for (const ntt of this.nodeTypeTools) {
        ntt._ = { icon: (this.$root.getNodeIcon(ntt, "comp.inst")) };
      }
      this.refresh();
    }
  onDropItem_new_comp: | #js
    function(item) {
      const node = item.item;
      alertify.prompt('➕🎁 Component name', null, (e, compName) => {
        if (!compName?.length) return alertify.error("Component name is required.");
        this.$root.do("create.comp", { contentNode: node, compName });
      });
    }
  refresh: | #js
    function() {
      this.compNodes = this.$root.getNodesByType?.("comp");
      this.key1++;
    }

watch:
  userApp:
    immediate: true
    deep: false
    handler: | #js
      function() {
        this.refresh();
      }

style:
  .context-menu h2:
    white-space: nowrap
    margin-right: 0.5em
  .tools:
    display: flex
    justify-content: center
    gap: 0.1em
  .tool:
    display: flex
    flex-direction: column
    align-items: center
    padding: 0 1em
    overflow: hidden
  .tool-dimmed:
    opacity: 0.4
    filter: grayscale(1)
  .tool-dimmed:hover:
    opacity: 1
    filter: "drop-shadow(-6px 6px 2px #00000080)"
  .new-comp:
    border: 4px dashed gray
  .title:
    width: auto
    margin-top: -0.5em
    padding: 0
    text-align: center
    opacity: 0.6
  .icon:
    font-size: 200%
