dom:
  div:
    ui.tabs:
      :options: tabOptions
      direction: vertical
      :show-title-in-tab: "true"
      :value: initialSelectedTab
      template:
        v-slot: tab0
        studio.doc.node.common.data.editor.field:
          :node: node
          :initial: initial
          :sui: sui
      template:
        v-slot: tab1
        h2:
          ui.input.text.box:
            hint: expression
            v-model: node.data.source.exp
      template:
        v-slot: tab2
        studio.doc.node.common.data.editor.url:
          :node: node
    div:
      studio.doc.node.common.data:
        :node: node
        :user-app-state: userAppState
      pre:
        v-if: "false"
        v-text: node

props:
  node:
  initial:
  userApp:
  userAppState:
  sui:

data:
  tabOptions: ['🍃 field', '🟰 exp', '🌐 fetch']

mounted: | #js
  function() {
  }

methods:

computed:
  initialSelectedTab: | #js
    function() {
      const types = this.node?.data?.source?.type?.split('.');
      if (!types?.length) return null;
      return this.tabOptions.findIndex(t => (types.includes(t.split(' ').last())));
    }
    