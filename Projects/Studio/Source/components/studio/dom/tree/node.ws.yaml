dom:
  .clickable:
    v-if: node
    v-text: nodeText
    @mouseenter: () => onHoverNode(node, true)
    @mouseleave: () => onHoverNode(node, false)
    @click: () => { if (sui) sui.node.selected = node; }
    :class: "{ selected: (node.id == sui?.node.selected?.id) }"

props:
  item:
  sui:

methods:
  getNodeIcon: | #js
    function(node) {
      const icons = {
        "user.app": "💻",
        layouts: "📄",
        layout: "📄",
        pages: "📃",
        page: "📄",
        panel: "🗂️",
        title: "🅰️",
        list: "🟰",
        comps: "🎁",
        comp: "🎁",
        "comp.inst": "📦",
        image: "🖼️",
        "slot.outlet": "🧩",
        "slot.content": "🧩🧊"
      };
      return (icons[node.type] || "❔");
    }
  onHoverNode: | #js
    function(node, isHovered) {
      if (!this.sui) return;
      this.sui.node.hovered = (!isHovered ? null : node);
    }

computed:
  nodeText: | #js
    function() {
      const node = this.node;
      const icon = this.getNodeIcon(node);
      let text = (node.slot?.name || node.comp?.name || node.name || node.type);
      if (text != node.type) text = `[${text}]`;
      return `${icon} ${text}`;
    }
  node: | #js
    function() {
      return this.item;
    }
