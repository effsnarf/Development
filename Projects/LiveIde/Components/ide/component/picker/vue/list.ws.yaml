dom:
  transition.group:
    tag: div
    name: list
    ':class': className
    div: 
      v-for: uid in uids.take(maxVisibleVues)
      ':key': uid
      ide.component.title:
        ':item': getVue(uid)
        ':class': '{ ''selected'': uid === selectedVueUID }'
        @mouseenter: $emit('hover', uid)
        @mouseleave: $emit('hover', null)
        @click: $emit('select', uid)
    div: 
      v-if: (uids.length > maxVisibleVues)
      v-text: '''⏬'' + (uids.length - maxVisibleVues) + '' more...'''
props:
  uids: null
  selectedVueUID: null
  className: null
data:
  maxVisibleVues: 20
methods:
  getVue: | #js
    function(uid) {
      const vue = vueApp.vm.vues[uid];
      return vue;
    }
name: ide-component-picker-vue-list
_:
  examples:
    count: 0
template: >-
  <transition-group class="comp-ide-component-picker-vue-list" tag="div"
  name="list" :class="className" path="-912894927."><div v-for="uid in
  uids.take(maxVisibleVues)" :key="uid" path="-912894927.0"><ide-component-title
  :item="getVue(uid)" :class="{ 'selected': uid === selectedVueUID }"
  @mouseenter="$emit('hover', uid)" @mouseleave="$emit('hover', null)"
  @click="$emit('select', uid)"
  path="-912894927.0.0"></ide-component-title></div><div v-if="(uids.length &gt;
  maxVisibleVues)" v-text="'⏬' + (uids.length - maxVisibleVues) + ' more...'"
  path="-912894927.1"></div></transition-group>
