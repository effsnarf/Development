dom:
  div: 
    v-if: obj
    class: box1 field-list
    ui.value:
      v-if: selectedFields?.length
      ':value': selectedFields.join(', ')
    div: 
      div: 
        v-for: field in fields
        ui.checkbox:
          ':text': field
          ':value-array': selectedFields
          ':value-key': field
props:
  obj: null
  value: null
data:
  fields: []
  selectedFields: []
watch:
  selectedFields:
    handler: | #js
      async function(selectedFields) {
        if (selectedFields?.join(',') == this.value?.join(',')) return;
        await this.$nextTick();
        await this.$root.wait(100);
        this.$emit("input", selectedFields);
      }
  obj:
    handler: | #js
      function(obj) {
        this.fields = (!obj) ? [] : Object.keys(obj);
      }
    immediate: true
  value:
    handler: | #js
      function(value) {
        if (value?.join(',') == this.selectedFields.join(',')) return;
        this.selectedFields = Objects.clone((!value) ? [] : value);
      }
    immediate: true
style:
  .field-list:
    max-height: 2.2em
    overflow: auto
    transition: 0.6s
  .field-list:hover:
    max-height: 10em
_:
  examples:
    count: 0
name: ui-value-field-picker
template: >-
  <div class="comp-ui-value-field-picker box1 field-list" v-if="obj"
  path="20302585."><ui-value v-if="selectedFields?.length"
  :value="selectedFields.join(', ')" path="20302585.0"></ui-value><div
  path="20302585.1"><div v-for="field in fields"
  path="20302585.1.0"><ui-checkbox :text="field" :value-array="selectedFields"
  :value-key="field" path="20302585.1.0.0"></ui-checkbox></div></div></div>
