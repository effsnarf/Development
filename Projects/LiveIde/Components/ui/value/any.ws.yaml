dom:
  div:
    ui.value.path.picker:
      v-if: showDrilldown
      ':obj': value
      v-model: selectedPath
    component:
      ':is': getComponentType(visibleValue)
      ':value': visibleValue
      ':title': title
      ':preview': 'false'
      ':depth': (depth + 1)
      ':show-drilldown': showDrilldown
      ':object-selected-path': objectSelectedPath
      ':array-selected-fields': arraySelectedFields
      @object-selected-path: (...args) => $emit('object-selected-path', ...args)
      @array-item-click: (...args) => $emit('array-item-click', ...args)
      @array-selected-fields: (...args) => $emit('array-selected-fields', ...args)
props:
  value: null
  title: null
  depth: 0
  showDrilldown: false
  objectSelectedPath: null
  arraySelectedFields: null
data:
  selectedPath: []
methods:
  getComponentType: | #js
    function(value) {
      const getType = (value) => {
        let typeofValue = typeof value;
        if (value == null) return "preview";
        if (Array.isArray(value)) return "array";
        if (["object", "boolean"].find(v => v == typeofValue)) return typeofValue;
        if (typeof value == "string")
        {
          const isColor = value.match(/^#[0-9a-f]{6}$/i);
          if (isColor) return "color";
        }
        return "preview";
      };
      return `ui.value.${getType(value)}`.replace(/\./g, "-");
    }
computed:
  visibleValue: | #js
    function() {
      if (!this.value) return null;
      if (!this.selectedPath?.length) return this.value;
      return Objects.getProperty(this.value, this.selectedPath.join("."));
    }
watch:
  objectSelectedPath:
    handler: | #js
      function(objectSelectedPath) {
        this.selectedPath = (objectSelectedPath || []);
      }
    immediate: true
  selectedPath:
    handler: | #js
      function(selectedPath) {
        this.$emit("object-selected-path", selectedPath);
      }
style:
  .console-log-button:
    position: absolute
    bottom: '-0.3em'
    right: '-0.5em'
    font-size: 200%
    padding: 0 0.4em
    cursor: pointer
    z-index: 1000
  .console-log-button:hover:
    background: '#ffffff20'
name: ui-value-any
_:
  examples:
    count: 0
template: >-
  <div class="comp-ui-value-any" path="1299909909."><ui-value-path-picker
  v-if="showDrilldown" :obj="value" v-model="selectedPath"
  path="1299909909.0"></ui-value-path-picker><component
  :is="getComponentType(visibleValue)" :value="visibleValue" :title="title"
  :preview="false" :depth="(depth + 1)" :show-drilldown="showDrilldown"
  :object-selected-path="objectSelectedPath"
  :array-selected-fields="arraySelectedFields" @object-selected-path="(...args)
  =&gt; $emit('object-selected-path', ...args)" @array-item-click="(...args)
  =&gt; $emit('array-item-click', ...args)" @array-selected-fields="(...args)
  =&gt; $emit('array-selected-fields', ...args)"
  path="1299909909.1"></component></div>
