dom:
  .box:
    v-if: actionStack
    .flex.justify-between:
      ui.button: 
        class: flex-equal
        text: ðŸ‘ˆ undo
        ':click': () => doVerb('undo')
      ui.button: 
        class: flex-equal
        text: redo ðŸ‘‰
        ':click': () => doVerb('redo')
      ui.button: 
        class: flex-equal
        text: âœ– clear
        ':click': () => doVerb('clear')
    div:
      ui.action.list:
        ref: list1
        ':action-stack': actionStack
        v-slot: slotProps
        template:
          slot:
            ':action': slotProps.action
props:
  actionStack: null
data: null
mounted: | #js
  function() {
  }
methods:
  doVerb: | #js
    async function(verb) {
      await this.actionStack[verb]();
      await this.refresh();
    }
  refresh: | #js
    async function() {
      this.$refs.list1.refresh();
    }
watch: null
style:
  .box:
    border: '1px solid #ffffff80'
  ul.actions:
    display: flex
    flex-direction: column-reverse
    font-family: monospace
  li:hover:
    background-color: '#ffffff10'
_:
  examples:
    count: 0
name: ui-action-stack
template: >-
  <div class="comp-ui-action-stack box" v-if="actionStack"
  path="-1417831958."><div class="flex justify-between"
  path="-1417831958.0"><ui-button class="flex-equal" text="ðŸ‘ˆ undo" :click="()
  =&gt; doVerb('undo')" path="-1417831958.0.0"></ui-button><ui-button
  class="flex-equal" text="redo ðŸ‘‰" :click="() =&gt; doVerb('redo')"
  path="-1417831958.0.1"></ui-button><ui-button class="flex-equal" text="âœ–
  clear" :click="() =&gt; doVerb('clear')"
  path="-1417831958.0.2"></ui-button></div><div
  path="-1417831958.1"><ui-action-list ref="list1" :action-stack="actionStack"
  v-slot="slotProps" path="-1417831958.1.0"><template
  path="-1417831958.1.0.0"><slot :action="slotProps.action"
  path="-1417831958.1.0.0.0"></slot></template></ui-action-list></div></div>
