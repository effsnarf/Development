dom:
  .box:
    v-if: actionStack
    h3: 
      ui.title: 
        icon: âœ¨
        text: Actions
        ':number': actionStack.actions.count
    .flex.justify-between:
      ui.button: 
        class: flex-equal
        text: ðŸ‘ˆ undo
        ':click': () => doVerb('undo')
      ui.button: 
        class: flex-equal
        text: redo ðŸ‘‰
        ':click': () => doVerb('redo')
      ui.button: 
        class: flex-equal
        text: âœ– clear
        ':click': () => doVerb('clear')
    div:
      ui.action.list:
        ref: list1
        ':action-stack': actionStack
        v-slot: slotProps
        template:
          slot:
            ':action': slotProps.action
      h3: 
        ui.title: 
          icon: âœ¨
          text: done
          ':number': actionStack.doneAction._id.value
props:
  actionStack: null
data:
  actionItems: []
mounted: | #js
  function() {
    this.refresh();
  }
methods:
  getActions: | #js
    async function() {
      let actions = await this.actionStack.actions.getMany();
      actions = actions.map(a => ({
        _id: a._id,
        method: a.redo.noop ? "no.op" : a.redo.method,
      }));
      actions = [...actions].reverse();
      return actions;
    }
  doVerb: | #js
    async function(verb) {
      await this.actionStack[verb]();
      await this.refresh();
    }
  refresh: | #js
    async function() {
      this.actionItems = await this.getActions();
      this.$refs.list1.refresh();
    }
watch:
  actionStack:
    handler: | #js
      async function(actionStack) {
        actionStack.events.on("change", this.refresh.bind(this));
      }
    immediate: true
style:
  .box:
    border: '1px solid #ffffff80'
  ul.actions:
    display: flex
    flex-direction: column-reverse
    font-family: monospace
_:
  examples:
    count: 0
name: ui-action-stack
template: >-
  <div class="comp-ui-action-stack box" v-if="actionStack"
  path="-1417831958."><h3 path="-1417831958.0"><ui-title icon="âœ¨" text="Actions"
  :number="actionStack.actions.count"
  path="-1417831958.0.0"></ui-title></h3><div class="flex justify-between"
  path="-1417831958.1"><ui-button class="flex-equal" text="ðŸ‘ˆ undo" :click="()
  =&gt; doVerb('undo')" path="-1417831958.1.0"></ui-button><ui-button
  class="flex-equal" text="redo ðŸ‘‰" :click="() =&gt; doVerb('redo')"
  path="-1417831958.1.1"></ui-button><ui-button class="flex-equal" text="âœ–
  clear" :click="() =&gt; doVerb('clear')"
  path="-1417831958.1.2"></ui-button></div><div
  path="-1417831958.2"><ui-action-list ref="list1" :action-stack="actionStack"
  v-slot="slotProps" path="-1417831958.2.0"><template
  path="-1417831958.2.0.0"><slot :action="slotProps.action"
  path="-1417831958.2.0.0.0"></slot></template></ui-action-list><h3
  path="-1417831958.2.1"><ui-title icon="âœ¨" text="done"
  :number="actionStack.doneAction._id.value"
  path="-1417831958.2.1.0"></ui-title></h3></div></div>
