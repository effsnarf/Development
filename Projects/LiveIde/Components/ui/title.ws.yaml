dom:
  div: 
    class: flex
    .icon:
      ':class': getIconClass()
      v-if: icon
      v-text: icon
    div: 
      slot: null
      div: 
        v-html: getHtml()
    .ml-1.opacity-40:
      v-if: number
      v-text: getNumberText()
props:
  icon: null
  text: null
  html: null
  value: null
  number: null
methods:
  getHtml: | #js
    function() {
      if (this.html) return this.html;
      return [this.text, this.value]
        .filter(s => s)
        .join(' ')
        .textToHtml();
    }
  getNumberText: | #js
    function() {
      return !this.number ? '' : `(${this.number})`;
    }
  getIconClass: | #js
    function() {
      if (this.icon == "📁") return "opacity-50";
      return null;
    }
style:
  .icon:
    text-align: center
  .flex:
    gap: 0.5em
  div:
    white-space: nowrap
    text-wrap: nowrap
name: ui-title
_:
  examples:
    count: 0
template: >-
  <div class="comp-ui-title flex" path="-2123702658."><div class="icon"
  :class="getIconClass()" v-if="icon" v-text="icon"
  path="-2123702658.0"></div><div path="-2123702658.1"><slot></slot><div
  v-html="getHtml()" path="-2123702658.1.1"></div></div><div class="ml-1
  opacity-40" v-if="number" v-text="getNumberText()"
  path="-2123702658.2"></div></div>
