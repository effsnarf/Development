dom:
  div: 
    ':class': class1
    ui.select:
      ':class': '{ corner: (type==''toggle'') }'
      ':options': (options||[]).map(option => _getOptionHtml(option))
      ':getUrl': getUrl
      ':direction': direction
      ':type': type
      ':can-select-none': 'false'
      v-model: selectedTabIndex
    div: 
      class: flex-grow-1
      slot: 
        name: header
      div: 
        v-for: (option, index) in options
        transition:
          ':name': (transitionName||'slide2')
          div: 
            v-show: (index == selectedTabIndex)
            slot: 
              ':name': '''tab'' + index'
props:
  options: null
  getOptionText: null
  getOptionHtml: null
  getUrl: null
  direction: vertical
  value: null
  transitionName: null
data:
  selectedTabIndex: 0
computed:
  type: | #js
    function() {
      if (this.direction === 'toggle') return 'toggle';
      return 'list';
    }
  class1: | #js
    function() {
      return null;
    }
methods:
  _getOptionHtml: | #js
    function(option) {
      const getOptionHtml = (option) => {
        if (this.getOptionHtml) return this.getOptionHtml(option);
        if (this.getOptionText) return this.getOptionText(option)?.textToHtml();
        return option;
      }
      let html = getOptionHtml(option);
      if (['jpg', 'jpeg', 'png'].some(ext => html.endsWith('.' + ext))) {
        html = `<img src="${html}" />`;
      }
      return html;
    }
watch:
  selectedTabIndex:
    handler: | #js
      function(newIndex) {
        if (!this.options) return;
        this.$emit('input', newIndex);
      }
    immediate: true
  value: | #js
    function(value) {
      if (!this.options) return;
      const newIndex = value;
      if (newIndex == this.selectedTabIndex) return;
      this.selectedTabIndex = newIndex;
    }
examples:
  - dom:
      ui.tabs:
        ':options': tabNames
        direction: horizontal
        template:
          v-for: (tabName, index) in tabNames
          v-slot: '''tab'' + index'
          h3:
            v-text: tabName
    data:
      tabNames:
        - 🧊 tab1
        - ✨ tab2
        - 📁 tab3
style:
  .comp-ui-select div:
    width: 100%
  .comp-ui-select img:
    display: block
    width: 1.5em
    aspect-ratio: 1
    margin: auto
  .comp-ui-select:
    margin-bottom: 0.1em
  .corner:
    position: absolute
    z-index: 10
    transform: scale(1.5)
    top: '-0.6em'
    right: '-1em'
  li:
    margin-bottom: 0
name: ui-tabs
_:
  examples:
    count: 1
template: >-
  <div class="comp-ui-tabs" :class="class1" path="-484156776."><ui-select
  :class="{ corner: (type=='toggle') }" :options="(options||[]).map(option =&gt;
  _getOptionHtml(option))" :getUrl="getUrl" :direction="direction" :type="type"
  :can-select-none="false" v-model="selectedTabIndex"
  path="-484156776.0"></ui-select><div class="flex-grow-1"
  path="-484156776.1"><slot name="header" path="-484156776.1.0"></slot><div
  v-for="(option, index) in options" path="-484156776.1.1"><transition
  :name="(transitionName||'slide2')" path="-484156776.1.1.0"><div v-show="(index
  == selectedTabIndex)" path="-484156776.1.1.0.0"><slot :name="'tab' + index"
  path="-484156776.1.1.0.0.0"></slot></div></transition></div></div></div>
