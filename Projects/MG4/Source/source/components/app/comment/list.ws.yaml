dom:
  div:
    app.progress:
      v-if: is.loading
    app.comment:
      v-for: comment in comments
      :key: comment.commentID
      :comment: comment
    .no-comments:
      v-if: noComments
      v-text: "'No comments'"

props:
  instanceID: null

data:
  comments: null
  is:
    loading: 0
    loaded: false

mounted: | #js
  async function() {
    await this.init();
  }

methods:
  init: | #js
    async function() {
      this.is.loading++;
      try
      {
        const url1 = `https://db.memegenerator.net/MemeGenerator/api/Comments/select/by?entityID=${this.entityID}`;
        this.comments = (await (await fetch(url1)).json());
      }
      finally
      {
        this.is.loading--;
        this.is.loaded = true;
      }
    }

computed:
  entityID: | #js
    function() {
      if (this.instanceID) return this.instanceID;
      return null;
    }
  noComments: | #js
    function() {
      return (this.is.loaded && !this.comments?.length);
    }

style:
  .no-comments:
    text-align: center
    opacity: 0.5
