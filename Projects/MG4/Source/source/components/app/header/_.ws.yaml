dom:
  .header:
    app.header.links:
    app.header.menu:
      @update-query: onUpdateQuery
    .page:
      .search-generators:
        v-if: showSearchResults
        ui.progress:
          v-if: is.loading
        app.gallery:
          :template: "'app.generator.small'"
          :items: searchGenerators1
          :per-row: 1
    app.header.tiers:

data:
  query:
    value: null
    timeout:
      handler: null
      delay: 400
  is:
    loading: 0
  searchGenerators1: null

mounted: | #js
  async function() {
    await this.searchGenerators();
  }

methods:
  onUpdateQuery: | #js
    function(query) {
      clearTimeout(this.query.timeout.handler);
      this.query.timeout.handler = setTimeout(() => { this.updateQueryValue(query); }, this.query.timeout.delay);
    }
  updateQueryValue: | #js
    function(query) {
      this.query.value = query;
      this.searchGenerators(query);
    }
  searchGenerators: | #js
    async function(query) {
      this.searchGenerators1 = null;
      if (!query) return;
      this.is.loading++;
      try
      {
        const url = `https://api.memegenerator.net//Generators_Search?q=${query}&pageIndex=0&pageSize=12&apiKey=demo`;
        this.searchGenerators1 = (await (await fetch(url)).json()).result.slice(0, 8);
      }
      finally
      {
        this.is.loading--;
      }
    }

computed:
  showSearchResults: | #js
    function() {
      if (this.is.loading) return true;
      if (this.searchGenerators1?.length) return true;
      return false;
    }

style:
  .header:
    margin-bottom: 1em
    color: white
    background: "linear-gradient(0deg, #000000a0, #000000)"
  .search-generators:
    position: absolute
    right: 0
    width: 25em
    border: 1px solid black
    border-radius: 0.5em
    background: "#ddd"
    box-shadow: -16px 16px 32px black
    z-index: 1
