dom:
  div:
    div:
      ':class': getCssClass()
      component:
        ':is': itemType
        ':value': item
      on_click: onNodeClick
      on_mouseenter: onMouseEnter
      on_mouseleave: onMouseLeave
    ul:
      class: ml-l1
      li:
        v-for: child in children
        ui.tree.node:
          ':item': child
          ':item-type': itemType
          ':getChildren': getChildren
          ':selected-node': selectedNode
          on_node-click: onChildClick
          on_node-hover: onChildHover
          on_node-unhover: onChildUnhover
props:
  item: null
  itemType: null
  getChildren: null
  selectedNode: null
data:
  isExpanded: null
  children: null
methods:
  getCssClass: |
    function() {
      return {
        hoverable: true,
        selected: this.isSelected,
      };
    }
  onNodeClick: |
    function() {
      if (this.isSelected)
      {
          this.isExpanded = false;
          this.children = null;
      }
      else
      {
        this.isExpanded = true;        
        this.children = this.getChildren(this.item);
      }
      this.$emit('node-click', this.item);
    }
  onMouseEnter: |
    function() {
      this.$emit('node-hover', this.item);
    }
  onMouseLeave: |
    function() {
      this.$emit('node-unhover', this.item);
    }
  onChildClick: |
    function(child) {
      this.$emit('node-click', child);
    }
  onChildHover: |
    function (child) {
      this.$emit('node-hover', child);
    }
  onChildUnhover: |
    function (child) {
      this.$emit('node-unhover', child);
    }
computed:
  childItems: |
    function() {
      return this.children || [];
    }
  isSelected: |
    function() {
      return (this.item == this.selectedNode);
    }
name: ui-tree-node
template: >-
  <div class="comp-ui-tree-node"><div :class="getCssClass()"
  @click="onNodeClick" @mouseenter="onMouseEnter"
  @mouseleave="onMouseLeave"><component :is="itemType"
  :value="item"></component></div><ul class="ml-l1"><li v-for="child in
  children"><ui-tree-node :item="child" :item-type="itemType"
  :getChildren="getChildren" :selected-node="selectedNode"
  @node-click="onChildClick" @node-hover="onChildHover"
  @node-unhover="onChildUnhover"></ui-tree-node></li></ul></div>
