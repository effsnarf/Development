dom:
  div:
    v-if: every
    ui.chart:
      :class: cssClass
      :header: event
      :title: last
      :data: values
      :color: color
      :scale: scale

props:
  app:
  category:
  event:
  last:
  every:
  type:
  scale:

data:
  values: []
  isBusy: 0

mounted: | #ts
  function() {
    this.fetchData();
  }

methods:
  fetchData: |
    async function() {
      this.isBusy++;
      try
      {
        this.values = await (await fetch(this.url)).json();
      }
      finally
      {
        this.isBusy--;
      }
    }

computed:
  url: |
    function() {
      let { app, category, event, last, every, type } = this;
      last = last.deunitify().unitifyTime();
      every = every.deunitify().unitifyTime();
      let url = `https://db.memegenerator.net/analytics/${app}/${category}/${event}/last/${last}/every/${every}/${type}`;
      url = url.withoutColors();
      return url;
    }

  color: |
    function() {
      return {
        "requests": "green",
        "response.time": "blue",
      }[this.event] || "";
    }

  cssClass: |
    function() {
      const cls = {};
      if (this.isBusy) cls["opacity-40"] = true;
      return cls;
    }

watch:
  url:
    handler: |
      async function() {
        await this.fetchData();
      }
    immediate: true
