dom:
  ul:
    li:
      ui.tree.node:
        ':node': root
        ':item-type': itemType
        ':get-item': getItem || ((node) => node.item)
        ':get-children': getChildren || ((node) => node.children||[])
        ':selected-node': selectedNode
        on_node-click: onChildClick
        on_node-hover: onChildHover
        on_node-unhover: onChildUnhover
props:
  root: null
  itemType: null
  getItem: null
  getChildren: null
data:
  selectedNode: null
methods:
  onChildClick: | #js
    function(child) {
      this.$emit('node-click', child);
      this.selectedNode = (child == this.selectedNode) ? null : child;
    }
  onChildHover: | #js
    function (child) {
      this.$emit('node-hover', child);
    }
  onChildUnhover: | #js
    function (child) {
      this.$emit('node-unhover', child);
    }
watch:
  selectedNode: | #js
    function(newVal, oldVal) {
      this.$emit('node-select', newVal);
    }
name: ui-tree
template: >-
  <ul class="comp-ui-tree"><li><ui-tree-node :node="root" :item-type="itemType"
  :get-item="getItem || ((node) =&gt; node.item)" :get-children="getChildren ||
  ((node) =&gt; node.children||[])" :selected-node="selectedNode"
  @node-click="onChildClick" @node-hover="onChildHover"
  @node-unhover="onChildUnhover"></ui-tree-node></li></ul>
