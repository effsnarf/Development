dom:
  site:
    page-name: media
    ':content-not-found': contentNotFound
    ':columns': 2
    template: 
      v-slot: article
    template: 
      v-slot: left
      div:
        ':style': '{ marginTop: ''4em'' }'
        v-if: builder
        .text-center:
          h2:
            v-text: builder.name
          .mt-l1:
            ui.link:
              ':text': '''✏️ Create new'''
              ':url': '''/b/''+builder?.urlName'
    template: 
      v-slot: middle
      transition:
        name: slide-large
        e.media:
          v-if: media
          ':key': media._id
          ':item': media
      .mt-l4:
        content.stream:
          ref: contentStream1
          item-type: e.media
          ':get-more-items': getMoreMedias
          grid-class: grid-1
data:
  media: null
  temp: null
  builder: null
  contentNotFound: false
mounted: | #js
  async function() {
    this.$watch(() => this.$root.params.mediaID, {
      handler: async () => {
        await this.init(this.$root.params.mediaID);
      },
      immediate: true
    });
  }
methods:
  init: | #js
    async function() {
      const dbp = this.$root.dbp;
      this.clear();
      if (!this.$root.params.mediaID) return;
      try
      {
        this.$root.isLoading++;
        this.media = await dbp.medias.select.one(this.$root.params.mediaID);
        if (!this.media) this.contentNotFound = true;
        if (this.$root.params.page == "media") {
          this.$root.setDocumentTitle(this.$root.getMediaText(this.media));
        }
      }
      finally
      {
        this.$root.isLoading--;
      }
    }
  clear: | #js
    function() {
      this.media = null;
      this.contentNotFound = false;
      this.$refs.contentStream1?.clear();
    }
  getMoreMedias: | #js
    async function(pageIndex, fromMediaID) {
      if (!this.media?.builderID) return [];
      if (!fromMediaID) fromMediaID = this.media?._id;
      return await this.$root.dbp.medias.select.new(this.media?.builderID, fromMediaID);
    }
watch:
  media:
    handler: | #js
      async function(media) {
        this.builder = !media ? null : await this.$root.getBuilder(media.builderID);
      }
style: null
name: page-media
template: >-
  <site class="comp-page-media" page-name="media"
  :content-not-found="contentNotFound" :columns="2" path="221009861."><template
  v-slot:article path="221009861.0"></template><template v-slot:left
  path="221009861.1"><div :style="{ marginTop: '4em' }" v-if="builder"
  path="221009861.1.0"><div class="text-center" path="221009861.1.0.0"><h2
  v-text="builder.name" path="221009861.1.0.0.0"></h2><div class="mt-l1"
  path="221009861.1.0.0.1"><ui-link :text="'✏️ Create new'"
  :url="'/b/'+builder?.urlName"
  path="221009861.1.0.0.1.0"></ui-link></div></div></div></template><template
  v-slot:middle path="221009861.2"><transition name="slide-large"
  path="221009861.2.0"><e-media v-if="media" :key="media._id" :item="media"
  path="221009861.2.0.0"></e-media></transition><div class="mt-l4"
  path="221009861.2.1"><content-stream ref="contentStream1" item-type="e.media"
  :get-more-items="getMoreMedias" grid-class="grid-1"
  path="221009861.2.1.0"></content-stream></div></template></site>
