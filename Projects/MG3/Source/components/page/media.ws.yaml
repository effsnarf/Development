dom:
  site:
    page-name: media
    ':columns-focus-left': columnsFocusLeft
    ':content-not-found': contentNotFound
    ':columns': 2
    template: 
      v-slot: article
    template: 
      v-slot: left
      .flex.ver.gap-2:
        e.media.menu:
          ':media': media
        e.thread.create:
          @input:columnsFocusLeft: columnsFocusLeft=$event
    template: 
      v-slot: middle
      .flex.gap-2:
        transition:
          name: slide-large
          e.thread:
            v-if: media
            ':key': media._id
            ':threadMediaID': media._id
data:
  media: null
  temp: null
  builder: null
  contentNotFound: false
  columnsFocusLeft: false
mounted: | #js
  async function() {
    this.$watch(() => this.$root.params.mediaID, {
      handler: async () => {
        await this.init(this.$root.params.mediaID);
      },
      immediate: true
    });
  }
methods:
  init: | #js
    async function() {
      const dbp = this.$root.dbp;
      this.clear();
      if (!this.$root.params.mediaID) return;
      try
      {
        this.$root.isLoading++;
        this.media = await dbp.medias.select.one(this.$root.params.mediaID);
        if (!this.media) this.contentNotFound = true;
        if (this.$root.params.page == "media") {
          this.$root.setDocumentTitle(this.$root.getMediaText(this.media));
        }
      }
      finally
      {
        this.$root.isLoading--;
      }
    }
  clear: | #js
    function() {
      this.media = null;
      this.contentNotFound = false;
      this.$refs.contentStream1?.clear();
    }
  getMoreMedias: | #js
    async function(pageIndex, fromMediaID) {
      if (!this.media?.builderID) return [];
      if (!fromMediaID) fromMediaID = this.media?._id;
      return await this.$root.dbp.medias.select.new(this.media?.builderID, fromMediaID);
    }
watch:
  media:
    handler: | #js
      async function(media) {
        this.builder = !media ? null : await this.$root.getBuilder(media.builderID);
      }
style: null
name: page-media
template: >-
  <site class="comp-page-media" page-name="media"
  :columns-focus-left="columnsFocusLeft" :content-not-found="contentNotFound"
  :columns="2" path="221009861."><template v-slot:article
  path="221009861.0"></template><template v-slot:left path="221009861.1"><div
  class="flex ver gap-2" path="221009861.1.0"><e-media-menu :media="media"
  path="221009861.1.0.0"></e-media-menu><e-thread-create
  @input:columnsFocusLeft="columnsFocusLeft=$event"
  path="221009861.1.0.1"></e-thread-create></div></template><template
  v-slot:middle path="221009861.2"><div class="flex gap-2"
  path="221009861.2.0"><transition name="slide-large"
  path="221009861.2.0.0"><e-thread v-if="media" :key="media._id"
  :threadMediaID="media._id"
  path="221009861.2.0.0.0"></e-thread></transition></div></template></site>
