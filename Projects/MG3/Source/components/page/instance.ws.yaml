dom:
  site:
    page-name: instance
    ':recommendation-items': recommendationItems
    template#1: null
    template#2:
      v-slot: middle
      content.stream:
        item-type: e.instance
        ':get-more-items': getMoreInstances
        grid-class: grid-1
data:
  instance: null
  generator: null
  recommendationItems: []
  isInited: false
mounted: |
  async function() {
    this.$watch(() => this.$root.params.instanceID, {
      handler: async () => {
        await this.init();
      },
      immediate: true
    });
  }
methods:
  init: |
    async function() {
      if (!this.$root.params.instanceID) return;
      const dbp = this.$root.dbp;
      this.instance = await dbp.instances.select.one(this.$root.params.instanceID);
      this.generator = await dbp.generators.select.one(this.instance.generatorID);
      this.recommendationItems = await dbp.generators.select.related(this.generator.urlName);
      if (this.$root.params.page == "instance") {
        this.$root.setDocumentTitle(this.$root.getInstanceText(instance));
      }
    }
  getMoreInstances: |
    async function(pageIndex) {
      const items = await this.$root.dbp.instances.select.popular("en", pageIndex)
      if ((pageIndex == 0) && (this.instance)) items.unshift(this.instance);
      return items;
    }
style: null
name: page-instance
template: >-
  <site class="comp-page-instance" page-name="instance"
  :recommendation-items="recommendationItems"><template></template><template
  v-slot:middle><content-stream item-type="e.instance"
  :get-more-items="getMoreInstances"
  grid-class="grid-1"></content-stream></template></site>
