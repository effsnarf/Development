dom:
  div: 
    transition: 
      name: slide
      e.generator.select:
        v-show: '!generator && showGeneratorSelect'
        v-model: generator || tempInstance.generator
        @input: showGeneratorSelect = false
    .container:
      ':class': layout
      div: 
        transition: 
          name: slide
          e.instance:
            class: '{ clickable: !generator  }'
            v-if: ((layout == 'horizontal') || hasText)
            ':item': tempInstance
            ':key': tempInstance.generator?.generatorID
            ':show-create-post': 'false'
            ':show-footer': 'false'
            @click: showGeneratorSelect = !showGeneratorSelect
      .inputs:
        input: 
          v-model: tempInstance.text0
          placeholder: top text
          @focus: onFocus
        input: 
          v-model: tempInstance.text1
          placeholder: bottom text
          @focus: onFocus
        transition: 
          name: slide
          .text-center:
            ui.button:
              v-if: showCreateButton && hasText
              text: create
              ':click': create
props:
  value: null
  generator: null
  layout: null
  showCreateButton: true
data:
  tempInstance: getNewTempInstance()
  showGeneratorSelect: false
  isCreating: false
methods:
  create: | #js
    async function() {
      this.isCreating = true;
      try
      {
        const instance = await this.$root.dbp.instances.create.one(null, this.tempInstance.generator?._id, null, this.tempInstance.text0, this.tempInstance.text1);
        this.clear();
        //this.$root.navigateTo(instance);
        //this.$emit("instance-created", newInstance);
      }
      finally
      {
        this.isCreating = false;
      }
    }
  clear: | #js
    function() {
      this.tempInstance.text0 = null;
      this.tempInstance.text1 = null;
    }
  onFocus: | #js
    function(e) {
      if (!this.tempInstance.generator) this.showGeneratorSelect = true;
    }
  getNewTempInstance: | #js
    function() {
      return { generator: null, imageID: null, text0: null, text1: null };
    }
computed:
  hasContent: | #js
    function() {
      return (this.hasGenerator && this.hasText) ? true : false;
    }
  hasGenerator: | #js
    function() {
      return !!this.tempInstance.generator;
    }
  hasText: | #js
    function() {
      return !!this.tempInstance.text0 || !!this.tempInstance.text1;
    }
watch:
  value:
    handler: | #js
      function(newValue) {
        this.tempInstance = newValue || this.getNewTempInstance();
      }
    immediate: true
  generator:
    handler: | #js
      function(generator) {
        this.tempInstance.generator = generator;
      }
    immediate: true
  tempInstance:
    handler: | #js
      function(newTempInstance) {
        this.$emit("input", newTempInstance);
      }
    deep: true
  hasContent: | #js
    function(newHasContent) {
      this.$emit("has-content", newHasContent);
    }
name: e-instance-create
style:
  .container:
    margin-bottom: 2rem
  .horizontal:
    display: grid !important
    grid-template: 1fr / 1fr 3fr
    gap: 1rem
  img:
    margin-bottom: 1rem
  .inputs input:
    text-align: center
    text-transform: uppercase
    padding: 0.3em 0.5em !important
    margin-bottom: 0.5rem
  button:
    display: block
    width: 70%
    margin: 0.5rem auto
template: >-
  <div class="comp-e-instance-create" path="-903297812."><transition
  name="slide" path="-903297812.0"><e-generator-select v-show="!generator
  &amp;&amp; showGeneratorSelect" v-model="generator || tempInstance.generator"
  @input="showGeneratorSelect = false"
  path="-903297812.0.0"></e-generator-select></transition><div class="container"
  :class="layout" path="-903297812.1"><div path="-903297812.1.0"><transition
  name="slide" path="-903297812.1.0.0"><e-instance class="{ clickable:
  !generator }" v-if="((layout == 'horizontal') || hasText)"
  :item="tempInstance" :key="tempInstance.generator?.generatorID"
  :show-create-post="false" :show-footer="false" @click="showGeneratorSelect =
  !showGeneratorSelect"
  path="-903297812.1.0.0.0"></e-instance></transition></div><div class="inputs"
  path="-903297812.1.1"><input v-model="tempInstance.text0" placeholder="top
  text" @focus="onFocus" path="-903297812.1.1.0"/><input
  v-model="tempInstance.text1" placeholder="bottom text" @focus="onFocus"
  path="-903297812.1.1.1"/><transition name="slide" path="-903297812.1.1.2"><div
  class="text-center" path="-903297812.1.1.2.0"><ui-button
  v-if="showCreateButton &amp;&amp; hasText" text="create" :click="create"
  path="-903297812.1.1.2.0.0"></ui-button></div></transition></div></div></div>
