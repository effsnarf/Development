dom:
  div:
    v-if: thread
    h3:
      v-text: thread.title
    transition.group:
      tag: ul
      name: list
      li:
        v-for: post in [...thread.posts,null]
        ':key': post?._id||0
        e.post:
          v-if: post
          ':item': post
          @refresh-thread: refresh
        e.post.create:
          v-else-if: '!post'
          ':threadID': thread?._id
          @created: refresh
props:
  value: null
data:
  thread: null
methods:
  refresh: | #js
    async function() {
      const updatedThread = await this.$root.dbp.threads.select.one(this.thread._id);
      // Thread was deleted
      if (!updatedThread) return this.$root.navigateTo('/');
      this.$emit('input', updatedThread);
    }
watch:
  value: | #js
    {
      handler: function(newValue) {
        this.thread = newValue;
      },
      immediate: true
    }
style:
  ul:
    margin: auto
  li:
    margin-bottom: 2vh
name: e-thread
template: >-
  <div class="comp-e-thread" v-if="thread" path="1226205107."><h3
  v-text="thread.title" path="1226205107.0"></h3><transition-group tag="ul"
  name="list" path="1226205107.1"><li v-for="post in [...thread.posts,null]"
  :key="post?._id||0" path="1226205107.1.0"><e-post v-if="post" :item="post"
  @refresh-thread="refresh" path="1226205107.1.0.0"></e-post><e-post-create
  v-else-if="!post" :threadID="thread?._id" @created="refresh"
  path="1226205107.1.0.1"></e-post-create></li></transition-group></div>
