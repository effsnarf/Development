dom:
  e.format.base:
    ':builder': builder
    ':media': media
    ':editable': editable
    ':builder-source-to-template': builderSourceToTemplate
    @cancel: $emit('cancel')
props:
  builder: null
  media: null
  editable: false
data:
  temp: null
methods:
  builderSourceToTemplate: | #js
    function(source) {
      if (!source) return null;

      const temp = {
        id: this.$root.getUniqueClientID(),
        type: "grid",
        layers: true,
        visible: true,
        aspectRatio: null,
        gap: 0.02,
        items: [],
        grid: {
          width: 1
        }
      };

      for (const item of source.items)
      {
        temp.items.push(this.getNewItem(item));
      }

      return temp;
    }
  getNewItem: | #js
    function(sourceItem) {
      const item = {
        id: this.$root.getUniqueClientID(),
        type: sourceItem.type,
        visible: true,
        editable: (sourceItem.editable || true),
      }

      if (item.type == "caption")
      {
        item.text = sourceItem.text;
        item.hint = sourceItem.hint;
        item.font = sourceItem.font;
        item.color = sourceItem.color;
        item.align = sourceItem.align || {h: null, v: null};
        item.uppercase = sourceItem.uppercase;
      }

      if (item.type == "image")
      {
        item.imageID = (sourceItem.imageID || null);
        item.removeBackground = (sourceItem.removeBackground || true);
        item.trans = sourceItem.trans || {
            pos: {
                x: 0.5,
                y: 0.5
            },
            scale: 1
        };
        item.shadow = sourceItem.shadow || {
          x: 0,
          y: 0,
          blur: 0,
          color: '#000000',
          opacity: 1
        }
      }

      if (item.type == "rainbow")
      {
        item.colors = (sourceItem.colors || ["#000000", "#ffffff", "#000000", "#ffffff", "#000000", "#ffffff"]);
        item.colorsCount = (sourceItem.colorsCount || 2);
        item.pattern = (sourceItem.pattern || "pizza");
        item.slices = (sourceItem.slices || 6);
      }

      return item;
    }
name: e-format-layers
template: >-
  <e-format-base class="comp-e-format-layers" :builder="builder" :media="media"
  :editable="editable" :builder-source-to-template="builderSourceToTemplate"
  @cancel="$emit('cancel')" path="938677584."></e-format-base>
