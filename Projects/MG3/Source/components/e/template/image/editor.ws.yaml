dom:
  .items:
    v-if: item
    transition#0:
      name: slide2
      div#1:
        v-if: "!showShadowEditor"
        transition#1:
          name: slide2
          ui.checkbox:
            v-if: (!removingBackground)
            text: remove background
            v-model: item.removeBackground
        ui.image.select:
          ref: imageSelect1
          v-model: item.imageID
          @uploading: onImageUploading
        transition#2:
          name: slide2
          .message:
            v-if: removingBackground
            div:
              v-text: '''Removing background'''
            ui.loading: null
    div:
      ui.expand:
        text: shadow
        v-model: showShadowEditor
      transition:
        name: slide2
        div:
          v-if: showShadowEditor
          ui.range#1:
            v-model: item.shadow.x
            min: -1
            max: 1
            step: 0.01
          ui.range#2:
            v-model: item.shadow.y
            min: -1
            max: 1
            step: 0.01
          ui.range#3:
            v-model: item.shadow.blur
            min: 0
            max: 1
            step: 0.01
props:
  item: null
data:
  removingBackground: false
  showMoveScale: false
  showShadowEditor: false
  processingNewImage: false
style:
  .comp-ui-image-select:
    margin-top: 1em
  .items:
    display: flex
    flex-direction: column
    gap: 1rem
mounted: | #js
  async function() {
    this.$watch('item.removeBackground', async (removeBackground) => {
      this.removingBackground = removeBackground;
    });
  }
methods:
  onFileDrop: | #js
    function(files) {
      this.$refs.imageSelect1.onFileDrop(files);
    }
  onImageUploading: | #js
    function(isUploading) {
      if (isUploading) {
        this.processingNewImage = true;
        this.item.removeBackground = false;
      }
      this.$emit('toggle-disabled', isUploading);
    }
  onLayerImageLoad: | #js
    function(src) {
      if (src.includes(".nobg."))
      {
        this.removingBackground = false;
        this.processingNewImage = false;
      }
      else
      {
        if (this.processingNewImage)
        {
          // After a user uploads a new image,
          // we wait until the browser loads the image
          // and then mark the checkbox to remove the background.
          this.item.trans.pos.x = 0.5;
          this.item.trans.pos.y = 0.5;
          this.item.trans.scale = 1;
          setTimeout(() => {
            this.item.removeBackground = true;
          }, 100);
        }
      }
    }
watch:
  processingNewImage: | #js
    async function(newValue) {
      this.$emit('toggle-disabled', newValue);
    }
name: e-template-image-editor
template: >-
  <div class="comp-e-template-image-editor items" v-if="item"
  path="1046603147."><transition name="slide2" path="1046603147.0"><ui-checkbox
  v-if="(!removingBackground)" text="remove background"
  v-model="item.removeBackground"
  path="1046603147.0.0"></ui-checkbox></transition><ui-image-select
  ref="imageSelect1" v-model="item.imageID" @uploading="onImageUploading"
  path="1046603147.1"></ui-image-select><transition name="slide2"
  path="1046603147.2"><div class="message" v-if="removingBackground"
  path="1046603147.2.0"><div v-text="'Removing background'"
  path="1046603147.2.0.0"></div><ui-loading></ui-loading></div></transition></div>
