dom:
  div: 
    div: 
      v-text: mediaID
    v-if: cMedia
    ':style': mediaStyle
    component:
      ':is': formatComponentName
      ':media': cMedia
props:
  item: null
  mediaID: null
  media: null
data:
  cMedia: null
  temp: null
methods:
  getMediaStyle: | #js
    function (builder) {
      const style = {};
      style.margin = "auto";
      if (builder?.source?.size?.max?.width) style['max-width'] = `${(parseInt(builder?.source?.size?.max?.width) + (!this.editable ? 0 : 15))}em`;
      return style;
    }
computed:
  cBuilder: | #js
    function () {
      return this.$root.builders.all[this.cMedia?.builderID];
    }
  formatComponentName: | #js
    function () {
      if (!this.cBuilder) return;
      return `e-format-${this.cBuilder.format.replace(/\./g, '-')}`;
    }
  mediaStyle: | #js
    function () {
      return this.getMediaStyle(this.cBuilder);
    }
watch:
  item:
    handler: | #js
      function (item) {
        if (this.cMedia) return;
        this.cMedia = item;
      }
    immediate: true
  media:
    handler: | #js
      function (media) {
        if (this.cMedia) return;
        this.cMedia = media;
      }
    immediate: true
  mediaID:
    handler: | #js
      async function (mediaID) {
        if (this.cMedia) return;
        this.cMedia = !mediaID ? null : await this.$root.dbp.medias.select.one(mediaID);
      }
    immediate: true
name: e-media
template: >-
  <div class="comp-e-media" v-if="cMedia" :style="mediaStyle"
  path="864271643."><div v-text="mediaID" path="864271643.0"></div><component
  :is="formatComponentName" :media="cMedia"
  path="864271643.1"></component></div>
