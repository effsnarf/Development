dom:
  div: 
    v-if: cMedia
    ':style': mediaStyle
    .flex.flex-column.gap-1:
      div: 
        @click: $emit('click-media-content')
        ui.image: 
          v-if: (cMedia.type=='feel')
          ':src': '''/img/feels/'' + cMedia.feelID + ''.webp'''
          ':square': true
        ui.image: 
          v-if: (cMedia.type=='image')
          ':imageID': cMedia.imageID
          ':square': square
        e.instance:
          v-if: (cMedia.type=='instance')
          ':item': cMedia.instance
          ':show-footer': showFooter
        component:
          v-if: (cMedia.type=='builder')
          ':is': formatComponentName
          ':media': cMedia
      e.media.recaption:
        v-if: (cMedia.type=='builder')
        ':media': cMedia
        @thread-updated: $emit('thread-updated')
props:
  item: null
  mediaID: null
  media: null
  square: false
  showFooter: true
data:
  cMedia: null
methods:
  onClickMediaContent: | #js
    function() {
      this.$emit('click-media-content');
    }
  getMediaStyle: | #js
    function (media) {
      if (!media) return {};
      const builder = media.builder;
      const style = {};
      style.margin = "auto";
      if (media.type == "feel") style.width = "5rem";
      if (builder?.source?.size?.max?.width) style['max-width'] = `${(parseInt(builder?.source?.size?.max?.width) + (!this.editable ? 0 : 15))}em`;
      return style;
    }
computed:
  cBuilder: | #js
    function () {
      return this.$root.builders.all[this.cMedia?.builderID];
    }
  formatComponentName: | #js
    function () {
      if (!this.cBuilder) return;
      return `e-format-${this.cBuilder.format.replace(/\./g, '-')}`;
    }
  mediaStyle: | #js
    function () {
      return this.getMediaStyle(this.cMedia);
    }
watch:
  item:
    handler: | #js
      function (item) {
        if (this.cMedia) return;
        this.cMedia = item;
      }
    immediate: true
  media:
    handler: | #js
      function (media) {
        if (this.cMedia) return;
        this.cMedia = media;
      }
    immediate: true
  mediaID:
    handler: | #js
      async function (mediaID) {
        if (this.cMedia) return;
        this.cMedia = !mediaID ? null : await this.$root.dbp.medias.select.one(mediaID);
      }
    immediate: true
style: null
name: e-media
template: >-
  <div class="comp-e-media" v-if="cMedia" :style="mediaStyle"
  path="864271643."><div class="flex flex-column gap-1" path="864271643.0"><div
  @click="$emit('click-media-content')" path="864271643.0.0"><ui-image
  v-if="(cMedia.type=='feel')" :src="'/img/feels/' + cMedia.feelID + '.webp'"
  :square="true" path="864271643.0.0.0"></ui-image><ui-image
  v-if="(cMedia.type=='image')" :imageID="cMedia.imageID" :square="square"
  path="864271643.0.0.1"></ui-image><e-instance v-if="(cMedia.type=='instance')"
  :item="cMedia.instance" :show-footer="showFooter"
  path="864271643.0.0.2"></e-instance><component v-if="(cMedia.type=='builder')"
  :is="formatComponentName" :media="cMedia"
  path="864271643.0.0.3"></component></div><e-media-recaption
  v-if="(cMedia.type=='builder')" :media="cMedia"
  @thread-updated="$emit('thread-updated')"
  path="864271643.0.1"></e-media-recaption></div></div>
