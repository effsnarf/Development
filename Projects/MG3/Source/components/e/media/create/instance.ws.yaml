dom:
  div: 
    transition: 
      name: slide
      e.generator.select:
        v-show: '!generator'
        v-model: generator
        ':defaultGeneratorID': contextMedia?.instance?.generatorID
    transition: 
      name: slide
      div: 
        v-show: generator
        .grid1:
          div: 
            e.instance:
              class: clickable
              ':item': instance
              @click: generator = null
          .inputs:
            input: 
              v-model: text0
              placeholder: top text
            input: 
              v-model: text1
              placeholder: bottom text
        .text-center.opacity-30:
          v-text: generator?.displayName
props:
  contextMedia: null
data:
  generator: null
  text0: null
  text1: null
methods:
  hasContent: | #js
    function(instance) {
      if (!instance) return false;
      if (!instance.generator) return false;
      if (!instance.text0 && !instance.text1) return false;
      return true;
    }
computed:
  instance: | #js
    function() {
      return { generator: this.generator, text0: this.text0, text1: this.text1 };
    }
  contentInstance: | #js
    function() {
      return (!this.hasContent(this.instance)) ? null : this.shortInstance;
    }
  shortInstance: | #js
    function() {
      return { generator: this.shortGenerator, text0: this.text0, text1: this.text1 };
    }
  shortGenerator: | #js
    function() {
      if (!this.generator) return null;
      const g = this.generator;
      const gen = { _id: this.generator._id };
      ["urlName", "displayName", "imageID"].forEach((k) => {
        gen[k] = g[k];
      });
      return gen;
    }
watch:
  contentInstance:
    handler: | #js
      (function(contentInstance) {
        const media = (!contentInstance) ? null : { type: "instance", instance: contentInstance };
        this.$emit("input", media);
      }).debounce(400)
    deep: true
style:
  .grid1:
    display: grid
    grid-template: 1fr / 1fr 3fr
    gap: 0.5em
  .inputs input:
    text-align: center
    text-transform: uppercase
    padding: 0.3em 0.5em !important
    margin-bottom: 0.5rem
  .clickable *:
    cursor: pointer
name: e-media-create-instance
template: >-
  <div class="comp-e-media-create-instance" path="925255284."><transition
  name="slide" path="925255284.0"><e-generator-select v-show="!generator"
  v-model="generator" :defaultGeneratorID="contextMedia?.instance?.generatorID"
  path="925255284.0.0"></e-generator-select></transition><transition
  name="slide" path="925255284.1"><div v-show="generator"
  path="925255284.1.0"><div class="grid1" path="925255284.1.0.0"><div
  path="925255284.1.0.0.0"><e-instance class="clickable" :item="instance"
  @click="generator = null" path="925255284.1.0.0.0.0"></e-instance></div><div
  class="inputs" path="925255284.1.0.0.1"><input v-model="text0"
  placeholder="top text" path="925255284.1.0.0.1.0"/><input v-model="text1"
  placeholder="bottom text" path="925255284.1.0.0.1.1"/></div></div><div
  class="text-center opacity-30" v-text="generator?.displayName"
  path="925255284.1.0.1"></div></div></transition></div>
