dom:
  div:
    ':class': getCssClass()
    div:
      class: content-title site-width
      div#1:
        class: background
      transition.group:
        name: list
        tag: ul
        li:
          ':key': title||Date.now()
          ui.image:
            v-if: imageID
            ':imageID': imageID
            ':url': url
          ui.large.title:
            ':text': title
    div#2:
      class: spacer
props:
  imageID: null
  title: null
  url: null
data:
  isStuck: false
methods:
  onScroll: |
    function() {
      const scrollTop = window.scrollY;
      this.isStuck = scrollTop > 0;
    }
  getCssClass: |
    function() {
      return { stuck: this.isStuck };
    }
mounted: |
  function() {
    window.addEventListener('scroll', this.onScroll);
  }
style:
  .stuck .title:
    font-size: 6vh
    transform: translateX(-10%)
  .background:
    background: linear-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0))
    position: absolute
    width: 100%
    height: 7.5rem
    top: 0
  .content-title:
    position: fixed
    top: 7rem
    z-index: 10
    border-radius: 0
    transition: 0s !important
  .comp-ui-image:
    position: relative
    top: 1rem
    max-width: 15% !important
    margin: 0 1em
    float: left
    box-shadow: '-0.5rem 0.5rem 0.5rem #000000'
    z-index: 20
  .comp-ui-image img:
    aspect-ratio: 1
    object-fit: cover
    max-height: 7rem
  .comp-ui-large-title:
    padding-top: 0.4em !important
    z-index: 10
  .spacer:
    height: 6rem
name: content-title
template: >-
  <div class="comp-content-title" :class="getCssClass()"><div
  class="content-title site-width"><div
  class="background"></div><transition-group name="list" tag="ul"><li
  :key="title||Date.now()"><ui-image v-if="imageID" :imageID="imageID"
  :url="url"></ui-image><ui-large-title
  :text="title"></ui-large-title></li></transition-group></div><div
  class="spacer"></div></div>
