dom:
  div: 
    .flex.items-baseline:
      div: 
        h3: 
          ui.title: 
            text: Changes
        ul: 
          class: changes
          ':key': key1
          li: 
            v-for: change in $root.state.getRefChanges(uid).take(20)
            class: hoverable
            ':key': change.id
            @mouseenter: () => onMouseEnter(change)
            @mouseleave: () => onMouseLeave(change)
            ide.state.tracker.item: 
              ':uid': uid
              ':item': change
              ':key': change.id
      div: 
        h3: 
          ui.title: 
            text: State
        ul: 
          li: 
            v-for: field in $root.vm.getFields(uid)
            ide.state.tracker.item: 
              ':uid': uid
              ':item': field
              ':key': uid+'.'+field.key
      div:  null
props:
  uid: null
data:
  key1: 1
mounted: | #js
  async function() {
    this.$root.$on("state-changed", this.onStateChanged.bind(this));
  }
methods:
  onStateChanged: | #js
    function(stateChange) {
      if (this.uid == stateChange.uid) {
        this.refresh();
      }
    }
  onMouseEnter: | #js
    function(item) {
      this.$root.state.apply(this.uid, item);
    }
  onMouseLeave: | #js
    function(item) {
    }
  refresh: | #js
    function() {
      this.key1++;
    }
style:
  .comp-ui-title:
    border-radius: 0
    border-bottom: '1px solid #000'
  .flex:
    gap: 1em
  ul:
    display: flex
    flex-direction: column-reverse
  ul:not(.changes) .grid:
    opacity: 0.5
  li:hover:
    background: '#ffffff30'
    transition: 0s
name: ide-state-tracker
template: >-
  <div class="comp-ide-state-tracker" path="-483235177."><div class="flex
  items-baseline" path="-483235177.0"><div path="-483235177.0.0"><h3
  path="-483235177.0.0.0"><ui-title text="Changes"
  path="-483235177.0.0.0.0"></ui-title></h3><ul class="changes" :key="key1"
  path="-483235177.0.0.1"><li class="hoverable" v-for="change in
  $root.state.getRefChanges(uid).take(20)" :key="change.id" @mouseenter="()
  =&gt; onMouseEnter(change)" @mouseleave="() =&gt; onMouseLeave(change)"
  path="-483235177.0.0.1.0"><ide-state-tracker-item :uid="uid" :item="change"
  :key="change.id"
  path="-483235177.0.0.1.0.0"></ide-state-tracker-item></li></ul></div><div
  path="-483235177.0.1"><h3 path="-483235177.0.1.0"><ui-title text="State"
  path="-483235177.0.1.0.0"></ui-title></h3><ul path="-483235177.0.1.1"><li
  v-for="field in $root.vm.getFields(uid)"
  path="-483235177.0.1.1.0"><ide-state-tracker-item :uid="uid" :item="field"
  :key="uid+'.'+field.key"
  path="-483235177.0.1.1.0.0"></ide-state-tracker-item></li></ul></div><div></div></div></div>
