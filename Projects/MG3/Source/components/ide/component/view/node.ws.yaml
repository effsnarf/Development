dom:
  .w-100pc:
    @click: onClick
    v-if: item
    ui.highlighter:
      ':get-elements': () => $root.getElementsFromViewNode(item)
      ui.title:
        ':icon': icon
        ':text': item[0]||'[root]'
    ui.context.window:
      ':icon': icon
      ':title': item[0]||'[root]'
      template:
        v-slot: content
        ide.component.view.attribute:
          v-for: attr in getAttributes(item)
          ':item': attr
props:
  item: null
data:
  icon: null
methods:
  onClick: | #js
    function() {
      console.log(this.item);
    }
  getAttributes: | #js
    function(item) {
      return Object.entries(item[1])
        .filter(e => (e[0] != "path"))
        .filter(e => (typeof e[1] != 'object'));
    }
  getIcon: | #js
    function(item) {
      if (this.$root.isComponentName(item[0])) return '📦';
      return '📁';
    }
watch:
  item:
    handler: | #js
      function(item) {
        this.icon = this.getIcon(item);
      }
    immediate: true
name: ide-component-view-node
template: >-
  <div class="comp-ide-component-view-node w-100pc" @click="onClick" v-if="item"
  path="-971127114."><ui-highlighter :get-elements="() =&gt;
  $root.getElementsFromViewNode(item)" path="-971127114.0"><ui-title
  :icon="icon" :text="item[0]||'[root]'"
  path="-971127114.0.0"></ui-title></ui-highlighter><ui-context-window
  :icon="icon" :title="item[0]||'[root]'" path="-971127114.1"><template
  v-slot:content path="-971127114.1.0"><ide-component-view-attribute v-for="attr
  in getAttributes(item)" :item="attr"
  path="-971127114.1.0.0"></ide-component-view-attribute></template></ui-context-window></div>
