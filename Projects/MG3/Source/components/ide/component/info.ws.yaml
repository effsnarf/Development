dom:
  div:
    table:
      tr:
        v-for: prop in getItemProperties()
        td#0:
          ':class': prop.class
          v-text: '''ðŸ§Š'''
        td#1:
          v-text: prop.name
        td#2:
          v-text: JSON.stringify(prop.value)?.shorten(20)
props:
  item: null
methods:
  getItemProperties: |
    function() {
      const props = [];
      if (!this.item) return props;
      props.push(...this.getItemProps(this.item().$data));
      props.push(...this.getItemProps(this.item().$props));
      props.push(...this.getItemProps(this.item().$options.computed));
      return props;
    }
  getItemProps: |
    function(collection) {
      if (!collection) return [];
      const props = [];
      for (const name of Object.keys(collection)) {
        props.push({
          name,
          value: (name in collection) ? collection[name] : this.item()[name],
        });
      }
      return props;
    }
name: ide-component-info
template: >-
  <div class="comp-ide-component-info"><table><tr v-for="prop in
  getItemProperties()"><td :class="prop.class" v-text="'ðŸ§Š'"></td><td
  v-text="prop.name"></td><td
  v-text="JSON.stringify(prop.value)?.shorten(20)"></td></tr></table></div>
