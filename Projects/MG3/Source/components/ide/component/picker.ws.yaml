dom:
  div:
    ui.keyboard:
      on_ctrl: onCtrlKey
    ui.mouse:
      on_hovered-element: onHoveredElement
      ':global': true
    ui.context:
      ref: context1
      ':global': true
      ':visible': showPicker
      template#1:
        v-slot: title
        ui.title:
          icon: ðŸ“¦
          ':value': getTitle(hoveredVueUID)
      template#2:
        v-slot: content
        .flex:
          .parent-chain:
            ide.component.title:
              v-for: uid in parentChain
              ':item': $root.vues[uid]
              ':class': '{ ''selected'': uid === selectedVueUID }'
              on_click: selectComponent(uid)
          ide.component.editor:
            ':vue-uid': selectedVueUID||hoveredVueUID
props: null
data:
  hoveredElement: null
  hoveredVueUID: null
  selectedVueUID: null
  parentChain: null
  showPicker: false
methods:
  selectComponent: | #js
    function(uid) {
      if (uid == this.selectedVueUID) uid = null;
      this.selectedVueUID = uid;
    }
  onCtrlKey: | #js
    function(ctrl) {
      this.showPicker = ctrl;
    }
  getTitle: | #js
    function(vue) {
      return this.$root.getVue(vue)?.$options._componentTag;
    }
  onHoveredElement: | #js
    function(el) {
      if (this.$refs.context1.isPinned) return;
      this.hoveredElement = el;
    }
  getParentChain: | #js
    function(vue) {
      const maxChainLength = 4;
      let chain = [];
      let parent = vue;
      while (parent && (chain.length < maxChainLength)) {
        chain.push(parent._uid);
        parent = this.getParentVue(parent);
      }
      chain = chain.reverse();
      return chain;
    }
  getParentVue: | #js
    function(vue) {
      return this.getVueFromVnode(vue.$parent);
    }
  getVueFromElement: | #js
    function(el) {
      return this.getVueFromVnode(this.getVnodeFromElement(el));
    }
  getVnodeFromElement: | #js
    function(el) {
      if (!el) return null;
      if (el.__vue__) return el.__vue__;
      return this.getVnodeFromElement(el.parentElement);
    }
  getVueFromVnode: | #js
    // Skip vnodes like <keep-alive>, <transition>, etc.
    function(vnode) {
      if (!vnode) return null;
      if (this.vNodeIsVue(vnode)) return vnode;
      return this.getVueFromVnode(vnode.$parent);
    }
  vNodeIsVue: | #js
    function(vnode) {
      if ([`transition`, `transition-group`, `keep-alive`].includes(vnode.$options._componentTag)) return false;
      return true;
    }
computed: null
watch:
  hoveredElement: | #js
    function(newEl, oldEl) {
      const vue = this.getVueFromElement(newEl);
      this.hoveredVueUID = vue?._uid;
      const parentChain = this.getParentChain(vue);
      this.parentChain = parentChain;
    }
  hoveredVueUID: | #js
    function(newVueUID, oldVueUID) {
      if (oldVueUID) this.$root.getVue(oldVueUID)?.$el.classList.remove(`highlighted2`);
      if (newVueUID) this.$root.getVue(newVueUID)?.$el.classList.add(`highlighted2`);
    }
style:
  div:
    font-family: monospace
  .parent-chain: null
  .parent-chain > :nth-child(1):
    margin-left: 0.5em
  .parent-chain > :nth-child(2):
    margin-left: 1em
  .parent-chain > :nth-child(3):
    margin-left: 1.5em
  .parent-chain > :nth-child(4):
    margin-left: 2em
  .parent-chain > :nth-child(5):
    margin-left: 2.5em
name: ide-component-picker
template: >-
  <div class="comp-ide-component-picker" path="-646340253."><ui-keyboard
  @ctrl="onCtrlKey" path="-646340253.0"></ui-keyboard><ui-mouse
  @hovered-element="onHoveredElement" :global="true"
  path="-646340253.1"></ui-mouse><ui-context ref="context1" :global="true"
  :visible="showPicker" path="-646340253.2"><template v-slot:title
  path="-646340253.2.0"><ui-title icon="ðŸ“¦" :value="getTitle(hoveredVueUID)"
  path="-646340253.2.0.0"></ui-title></template><template v-slot:content
  path="-646340253.2.1"><div class="flex" path="-646340253.2.1.0"><div
  class="parent-chain" path="-646340253.2.1.0.0"><ide-component-title v-for="uid
  in parentChain" :item="$root.vues[uid]" :class="{ 'selected': uid ===
  selectedVueUID }" @click="selectComponent(uid)"
  path="-646340253.2.1.0.0.0"></ide-component-title></div><ide-component-editor
  :vue-uid="selectedVueUID||hoveredVueUID"
  path="-646340253.2.1.0.1"></ide-component-editor></div></template></ui-context></div>
